{
    "openapi": "3.0.0",
    "paths": {
      "/api/v1": {
        "get": {
          "operationId": "AppController_getHello",
          "parameters": [],
          "responses": {
            "200": {
              "description": ""
            }
          }
        }
      },
      "/api/v1/users/login": {
        "post": {
          "operationId": "UsersController_login",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ]
        }
      },
      "/api/v1/users/currency/rates": {
        "get": {
          "operationId": "UsersController_getCurrencyRates",
          "parameters": [],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ]
        }
      },
      "/api/v1/users/lookup": {
        "get": {
          "operationId": "UsersController_findBySearch",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users": {
        "get": {
          "operationId": "UsersController_findAll",
          "parameters": [
            {
              "name": "userDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByEmailVerification",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByAutoWithdrawalModes",
              "required": false,
              "in": "query",
              "description": "Supported WithdrawalModes: MANUAL,DAILY,WEEKLY,MONTHLY,YEARLY",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByStatuses",
              "required": false,
              "in": "query",
              "description": "Supported Statues separated by comma: ACTIVE,DISABLE,DEACTIVATE,DELETE",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByCategories",
              "required": false,
              "in": "query",
              "description": "One or more of ADMIN,CARETAKER,OWNER_MANAGER,GUEST_TENANT,SERVICE_PROVIDER,CREATOR",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByIsShortLetOwner",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByHasFlat",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByIsHouseOwner",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "FOLLOW",
                  "LIKE",
                  "SUPER_LIKE",
                  "WATCH",
                  "CUSTOMER",
                  "VIEW",
                  "NEW_COMMENT",
                  "REPLY_COMMENT",
                  "BLOCK",
                  "BOOKMARK"
                ],
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "UsersController_createUser",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreateDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ]
        }
      },
      "/api/v1/users/subscribers": {
        "get": {
          "operationId": "UsersController_findSubscribeTos",
          "parameters": [
            {
              "name": "subscribeToDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "subscribeToByRunningDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "subscribeToStatuses",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "subscribeToByIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "subscribeToBySubscriberIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "subscribeToByPlannerIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/phone/{phoneCode}/number/{phoneNumber}/token": {
        "patch": {
          "operationId": "UsersController_sendPhoneToken",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "phoneCode",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "phoneNumber",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isWhatsAppChannel",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/wallet/{amount}/funds": {
        "post": {
          "operationId": "UsersController_fundWallet",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "amount",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/phone/token/{token}/verify": {
        "patch": {
          "operationId": "UsersController_verifyPhoneToken",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "token",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/block": {
        "patch": {
          "operationId": "UsersController_blockUser",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/confirm/{entityId}/actions": {
        "get": {
          "operationId": "UsersController_confirmBehaviorAction",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "entityId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "type",
              "required": true,
              "in": "query",
              "schema": {
                "enum": [
                  "FOLLOW",
                  "LIKE",
                  "SUPER_LIKE",
                  "WATCH",
                  "CUSTOMER",
                  "VIEW",
                  "NEW_COMMENT",
                  "REPLY_COMMENT",
                  "BLOCK",
                  "BOOKMARK"
                ],
                "type": "string"
              }
            },
            {
              "name": "entityType",
              "required": true,
              "in": "query",
              "schema": {
                "enum": [
                  "USER",
                  "HOUSE",
                  "FLAT",
                  "HOTEL",
                  "ROOM",
                  "SHORT_LET",
                  "POST",
                  "AD",
                  "SERVICE_REQUEST",
                  "COMMENT",
                  "REVIEW"
                ],
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ]
        }
      },
      "/api/v1/users/{userId}/follow": {
        "patch": {
          "operationId": "UsersController_followUser",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/unfollow": {
        "delete": {
          "operationId": "UsersController_unfollowUser",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/followings": {
        "get": {
          "operationId": "UsersController_getFollowings",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/followers": {
        "get": {
          "operationId": "UsersController_getFollowers",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/request-verification": {
        "post": {
          "operationId": "UsersController_requestVerification",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRequestVerificationDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/subscribe/setup": {
        "patch": {
          "operationId": "UsersController_myPlanSetup",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPlanSetupDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/subscribe/to": {
        "patch": {
          "operationId": "UsersController_subscribeToMe",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscribeToPlanDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/property/inspection-fees": {
        "patch": {
          "operationId": "UsersController_setupPropertyInspection",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyInspectionDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/subscribe/blue-badge": {
        "patch": {
          "operationId": "UsersController_boostPost",
          "parameters": [],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/subscribe/service-request": {
        "patch": {
          "operationId": "UsersController_subscribeServiceRequest",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscribePlanDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/subscribe/property-listing": {
        "patch": {
          "operationId": "UsersController_subscribePropertyRequest",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscribePlanDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/houses/likes": {
        "get": {
          "operationId": "UsersController_getHouseLikes",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/houses/bookmarks": {
        "get": {
          "operationId": "UsersController_getHouseBookmarks",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/flats/likes": {
        "get": {
          "operationId": "UsersController_getFlatLikes",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/flats/bookmarks": {
        "get": {
          "operationId": "UsersController_getFlatBookmarks",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/hotels/likes": {
        "get": {
          "operationId": "UsersController_getHotelLikes",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/hotels/bookmarks": {
        "get": {
          "operationId": "UsersController_getHotelBookmarks",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/posts/bookmarks": {
        "get": {
          "operationId": "UsersController_getPostBookmarks",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/posts/likes": {
        "get": {
          "operationId": "UsersController_getPostLikes",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/rooms/likes": {
        "get": {
          "operationId": "UsersController_getRoomLikes",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/rooms/bookmarks": {
        "get": {
          "operationId": "UsersController_getRoomBookmarks",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/short-lets/likes": {
        "get": {
          "operationId": "UsersController_getShortLetLikes",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/short-lets/bookmarks": {
        "get": {
          "operationId": "UsersController_getShortLetBookmarks",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/logout": {
        "get": {
          "operationId": "UsersController_logout",
          "parameters": [],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/refresh/{token}": {
        "post": {
          "operationId": "UsersController_refreshToken",
          "parameters": [
            {
              "name": "token",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/revoke/{token}": {
        "get": {
          "operationId": "UsersController_revokeToken",
          "parameters": [
            {
              "name": "token",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ]
        }
      },
      "/api/v1/users/revoke/{token}/htm": {
        "get": {
          "operationId": "UsersController_revokeTokenHTM",
          "parameters": [
            {
              "name": "token",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ]
        }
      },
      "/api/v1/users/me": {
        "get": {
          "operationId": "UsersController_getUserProfile",
          "parameters": [],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}": {
        "put": {
          "operationId": "UsersController_updateUser",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdateDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{userId}/change-password": {
        "put": {
          "operationId": "UsersController_changePassword",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserChangePasswordDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/{email}/forget-password": {
        "post": {
          "operationId": "UsersController_forgetPassword",
          "parameters": [
            {
              "name": "email",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ]
        }
      },
      "/api/v1/users/{emailOrPhone}/forget-password-code": {
        "post": {
          "operationId": "UsersController_forgetPasswordCode",
          "parameters": [
            {
              "name": "emailOrPhone",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ]
        }
      },
      "/api/v1/users/{token}/forget-password-verify": {
        "patch": {
          "operationId": "UsersController_forgetPasswordVerify",
          "parameters": [
            {
              "name": "token",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserForgetPasswordDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ]
        }
      },
      "/api/v1/users/{userId}/profile-photo": {
        "put": {
          "operationId": "UsersController_addPhoto",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAddPhotoDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/lookup/{username}": {
        "get": {
          "operationId": "UsersController_findByUsername",
          "parameters": [
            {
              "name": "username",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/banks": {
        "get": {
          "operationId": "UsersController_getBanks",
          "parameters": [],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ]
        }
      },
      "/api/v1/users/{userId}/verify/{token}/email": {
        "get": {
          "operationId": "UsersController_verifyEmail",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "token",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ]
        }
      },
      "/api/v1/users/{userId}/verify/{token}/email/htm": {
        "get": {
          "operationId": "UsersController_verifyEmailHTM",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "token",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ]
        }
      },
      "/api/v1/users/{userId}/email-verification": {
        "post": {
          "operationId": "UsersController_sendEmailVerificationToken",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/verify/account-number": {
        "post": {
          "operationId": "UsersController_verifyAccount",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountVerify"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/users/users/behavioral/metrics": {
        "get": {
          "operationId": "UsersController_findBehavioralReport",
          "parameters": [
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "behavioralByEntityIds",
              "required": false,
              "in": "query",
              "description": "One or More entity Id separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "behavioralByEntityTypes",
              "required": false,
              "in": "query",
              "description": "One or More separated by comma USER,HOUSE,FLAT,HOTEL,ROOM,SHORT_LET,POST,AD,SERVICE_REQUEST,COMMENT,REVIEW",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "behavioralByTypes",
              "required": false,
              "in": "query",
              "description": "One or More separated by comma FOLLOW,LIKE,SUPER_LIKE,WATCH,CUSTOMER,VIEW,NEW_COMMENT,REPLY_COMMENT,BLOCK,BOOKMARK",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "users"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins": {
        "post": {
          "operationId": "UsersAdminsController_createAdmin",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreateDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/users/{userId}/phone/{phoneCode}/number/{phoneNumber}/token": {
        "patch": {
          "operationId": "UsersAdminsController_sendPhoneToken",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "phoneCode",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "phoneNumber",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isWhatsAppChannel",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/users/{userId}/phone/token/{token}/verify": {
        "patch": {
          "operationId": "UsersAdminsController_verifyPhoneToken",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "token",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/lookup": {
        "get": {
          "operationId": "UsersAdminsController_findBySearch",
          "parameters": [
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/users/{userId}/request-verification/status": {
        "post": {
          "operationId": "UsersAdminsController_VerificationRequest",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "requestType",
              "required": true,
              "in": "query",
              "schema": {
                "enum": [
                  "CONTENT_CREATOR",
                  "BLUE_BADGE",
                  "LEGACY_BADGE",
                  "PROPERTY_OWNER_MANAGER",
                  "SERVICE_PROVIDER"
                ],
                "type": "string"
              }
            },
            {
              "name": "requestStatus",
              "required": true,
              "in": "query",
              "schema": {
                "enum": [
                  "PENDING",
                  "REQUESTED",
                  "REJECTED",
                  "APPROVED"
                ],
                "type": "string"
              }
            }
          ],
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/users/{userId}/request-verification": {
        "post": {
          "operationId": "UsersAdminsController_requestVerification",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRequestVerificationDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/me": {
        "get": {
          "operationId": "UsersAdminsController_getUserProfile",
          "parameters": [],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/logout": {
        "get": {
          "operationId": "UsersAdminsController_logout",
          "parameters": [],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/refresh/{token}": {
        "post": {
          "operationId": "UsersAdminsController_refreshToken",
          "parameters": [
            {
              "name": "token",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/users/lookup/{username}": {
        "get": {
          "operationId": "UsersAdminsController_findByUsername",
          "parameters": [
            {
              "name": "username",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/users/{id}": {
        "delete": {
          "operationId": "UsersAdminsController_remove",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/banks": {
        "get": {
          "operationId": "UsersAdminsController_getBanks",
          "parameters": [],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/users/verify/account-number": {
        "post": {
          "operationId": "UsersAdminsController_verifyAccount",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountVerify"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/users": {
        "post": {
          "operationId": "UsersAdminsController_createUser",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreateDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ]
        },
        "get": {
          "operationId": "UsersAdminsController_findAll",
          "parameters": [
            {
              "name": "userDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByEmailVerification",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByAutoWithdrawalModes",
              "required": false,
              "in": "query",
              "description": "Supported WithdrawalModes: MANUAL,DAILY,WEEKLY,MONTHLY,YEARLY",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByStatuses",
              "required": false,
              "in": "query",
              "description": "Supported Statues separated by comma: ACTIVE,DISABLE,DEACTIVATE,DELETE",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByCategories",
              "required": false,
              "in": "query",
              "description": "One or more of ADMIN,CARETAKER,OWNER_MANAGER,GUEST_TENANT,SERVICE_PROVIDER,CREATOR",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByIsShortLetOwner",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByHasFlat",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByIsHouseOwner",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "FOLLOW",
                  "LIKE",
                  "SUPER_LIKE",
                  "WATCH",
                  "CUSTOMER",
                  "VIEW",
                  "NEW_COMMENT",
                  "REPLY_COMMENT",
                  "BLOCK",
                  "BOOKMARK"
                ],
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/users/{userId}": {
        "put": {
          "operationId": "UsersAdminsController_updateUser",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdateDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/users/{userId}/profile-photo": {
        "put": {
          "operationId": "UsersAdminsController_addPhoto",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAddPhotoDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/users/{userId}/change-password": {
        "put": {
          "operationId": "UsersAdminsController_changePassword",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserChangePasswordDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/users/{email}/forget-password": {
        "post": {
          "operationId": "UsersAdminsController_forgetPassword",
          "parameters": [
            {
              "name": "email",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ]
        }
      },
      "/api/v1/admins/users/{emailOrPhone}/forget-password-code": {
        "post": {
          "operationId": "UsersAdminsController_forgetPasswordCode",
          "parameters": [
            {
              "name": "emailOrPhone",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ]
        }
      },
      "/api/v1/admins/users/{token}/forget-password-verify": {
        "patch": {
          "operationId": "UsersAdminsController_forgetPasswordVerify",
          "parameters": [
            {
              "name": "token",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserForgetPasswordDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ]
        }
      },
      "/api/v1/admins/users/{userId}/verify/{token}/email": {
        "put": {
          "operationId": "UsersAdminsController_verifyEmail",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "token",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/users/{userId}/email-verification": {
        "post": {
          "operationId": "UsersAdminsController_sendEmailVerificationToken",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/users/subscribers": {
        "get": {
          "operationId": "UsersAdminsController_findSubscribeTos",
          "parameters": [
            {
              "name": "subscribeToDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "subscribeToByRunningDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "subscribeToStatuses",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "subscribeToByIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "subscribeToBySubscriberIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "subscribeToByPlannerIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/users/metrics": {
        "get": {
          "operationId": "UsersAdminsController_findReport",
          "parameters": [
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "userDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByEmailVerification",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByStatuses",
              "required": false,
              "in": "query",
              "description": "Supported Statues separated by comma: ACTIVE,DISABLE,DEACTIVATE,DELETE",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByCategories",
              "required": false,
              "in": "query",
              "description": "One or more of ADMIN,CARETAKER,OWNER_MANAGER,GUEST_TENANT,SERVICE_PROVIDER,CREATOR",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByAutoWithdrawalModes",
              "required": false,
              "in": "query",
              "description": "Supported WithdrawalModes: MANUAL,DAILY,WEEKLY,MONTHLY,YEARLY",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByHasFlat",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByIsShortLetOwner",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByIsHouseOwner",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userByIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/users/behavioral/metrics": {
        "get": {
          "operationId": "UsersAdminsController_findBehavioralReport",
          "parameters": [
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "behavioralByEntityIds",
              "required": false,
              "in": "query",
              "description": "One or More entity Id separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "behavioralByEntityTypes",
              "required": false,
              "in": "query",
              "description": "One or More separated by comma USER,HOUSE,FLAT,HOTEL,ROOM,SHORT_LET,POST,AD,SERVICE_REQUEST,COMMENT,REVIEW",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "behavioralByTypes",
              "required": false,
              "in": "query",
              "description": "One or More separated by comma FOLLOW,LIKE,SUPER_LIKE,WATCH,CUSTOMER,VIEW,NEW_COMMENT,REPLY_COMMENT,BLOCK,BOOKMARK",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "behavioralByUserIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/service-requests": {
        "post": {
          "operationId": "ServiceRequestsController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateServiceRequestDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "service-requests"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "ServiceRequestsController_findAll",
          "parameters": [],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "service-requests"
          ]
        }
      },
      "/api/v1/service-requests/{serviceRequestId}": {
        "patch": {
          "operationId": "ServiceRequestsController_update",
          "parameters": [
            {
              "name": "serviceRequestId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateServiceRequestDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "service-requests"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "ServiceRequestsController_findById",
          "parameters": [
            {
              "name": "serviceRequestId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "service-requests"
          ]
        }
      },
      "/api/v1/service-requests/{serviceRequestId}/archive": {
        "patch": {
          "operationId": "ServiceRequestsController_toggleArchive",
          "parameters": [
            {
              "name": "serviceRequestId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "service-requests"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/service-requests/{serviceRequestId}/seeking": {
        "patch": {
          "operationId": "ServiceRequestsController_toggleSeeking",
          "parameters": [
            {
              "name": "serviceRequestId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "service-requests"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/service-requests/{serviceRequestId}/pin": {
        "patch": {
          "operationId": "ServiceRequestsController_togglePin",
          "parameters": [
            {
              "name": "serviceRequestId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "service-requests"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/service-requests": {
        "post": {
          "operationId": "ServiceRequestsAdminsController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateServiceRequestDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "ServiceRequestsAdminsController_findAll",
          "parameters": [],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/service-requests/{serviceRequestId}": {
        "patch": {
          "operationId": "ServiceRequestsAdminsController_update",
          "parameters": [
            {
              "name": "serviceRequestId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateServiceRequestDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "ServiceRequestsAdminsController_remove",
          "parameters": [
            {
              "name": "serviceRequestId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "ServiceRequestsAdminsController_findById",
          "parameters": [
            {
              "name": "serviceRequestId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/service-requests/{serviceRequestId}/active": {
        "patch": {
          "operationId": "ServiceRequestsAdminsController_toggleActive",
          "parameters": [
            {
              "name": "serviceRequestId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/service-requests/{serviceRequestId}/seeking": {
        "patch": {
          "operationId": "ServiceRequestsAdminsController_toggleSeeking",
          "parameters": [
            {
              "name": "serviceRequestId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/service-requests/{serviceRequestId}/archive": {
        "patch": {
          "operationId": "ServiceRequestsAdminsController_toggleArchive",
          "parameters": [
            {
              "name": "serviceRequestId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/service-requests/{serviceRequestId}/pin": {
        "patch": {
          "operationId": "ServiceRequestsAdminsController_togglePin",
          "parameters": [
            {
              "name": "serviceRequestId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties": {
        "get": {
          "operationId": "PropertiesController_findProperties",
          "parameters": [
            {
              "name": "onlyRecordType",
              "required": false,
              "in": "query",
              "description": "one type selection",
              "schema": {
                "enum": [
                  "ALL",
                  "HOTEL",
                  "HOUSE",
                  "SHORT_LET",
                  "POST",
                  "AD"
                ],
                "type": "string"
              }
            },
            {
              "name": "postByOrigin",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "OWNER",
                  "SUBSCRIBER",
                  "PUBLIC"
                ],
                "type": "string"
              }
            },
            {
              "name": "bySearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPriceRange",
              "required": false,
              "in": "query",
              "description": "Eg: lowAmount,HighAmount or 500,1000",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPropertyIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byOwnerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byApartmentTypes",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfBathrooms",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfToilets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfPets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfChildren",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfInfants",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfAdults",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byCities",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byStates",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byCountries",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byLocations",
              "required": false,
              "in": "query",
              "description": "e.g: longitude,latitude,KM or -40.943,29.2933,20",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1, default: 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byActive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byArchive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPin",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isKitchenShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isBathroomShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isToiletShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isSharedSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isNearbyAmenities",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasSecurityFeature",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOutdoorSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isFurnished",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "parkingSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isPetFriendly",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasVideo",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isListing",
              "required": false,
              "in": "query",
              "description": "0 or 1, default: 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "FOLLOW",
                  "LIKE",
                  "SUPER_LIKE",
                  "WATCH",
                  "CUSTOMER",
                  "VIEW",
                  "NEW_COMMENT",
                  "REPLY_COMMENT",
                  "BLOCK",
                  "BOOKMARK"
                ],
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "description": "minimum limit of 20",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ]
        }
      },
      "/api/v1/properties/houses/flats/{flatId}/archive": {
        "patch": {
          "operationId": "FlatsController_toggleArchive",
          "parameters": [
            {
              "name": "flatId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/houses/flats/{flatId}/pin": {
        "patch": {
          "operationId": "FlatsController_togglePin",
          "parameters": [
            {
              "name": "flatId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/houses/flats": {
        "post": {
          "operationId": "FlatsController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFlatDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "FlatsController_findFlats",
          "parameters": [
            {
              "name": "flatByPriceRange",
              "required": false,
              "in": "query",
              "description": "Eg: 500,1000",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isKitchenShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isBathroomShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isToiletShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isSharedSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byActive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byArchive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPin",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfBathrooms",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfToilets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfPets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfChildren",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfInfants",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfAdults",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByPaymentModes",
              "required": false,
              "in": "query",
              "description": "All separated by comma of DAILY,WEEKLY,MONHTLY,YEARLY",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByReferenceCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByEmails",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByNextPaymentDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-09-01,2023-09-30",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByCurrentPaymentDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-09-01,2023-09-30",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByIsOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByIsCurrentRentServicePaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByIsCurrentRentPaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByHouseIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByTenantIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByOwnerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasVideo",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "FOLLOW",
                  "LIKE",
                  "SUPER_LIKE",
                  "WATCH",
                  "CUSTOMER",
                  "VIEW",
                  "NEW_COMMENT",
                  "REPLY_COMMENT",
                  "BLOCK",
                  "BOOKMARK"
                ],
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ]
        }
      },
      "/api/v1/properties/houses/flats/{flatId}/bookings": {
        "post": {
          "operationId": "FlatsController_bookHouseFlat",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HousePaymentChargeDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/houses/flats/{flatId}/video/upload": {
        "patch": {
          "operationId": "FlatsController_uploadProductVideo",
          "parameters": [
            {
              "name": "flatId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/houses/flats/{flatId}/houses/{houseId}/like": {
        "patch": {
          "operationId": "FlatsController_likeFlat",
          "parameters": [
            {
              "name": "flatId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/houses/flats/{flatId}/houses/{houseId}/unlike": {
        "patch": {
          "operationId": "FlatsController_unlikeFlat",
          "parameters": [
            {
              "name": "flatId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/houses/flats/{flatId}/houses/{houseId}/bookmark": {
        "patch": {
          "operationId": "FlatsController_bookmarkFlat",
          "parameters": [
            {
              "name": "flatId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/houses/flats/{flatId}/houses/{houseId}/unbookmark": {
        "patch": {
          "operationId": "FlatsController_unBookmarkFlat",
          "parameters": [
            {
              "name": "flatId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/houses/flats/{flatId}/likes": {
        "get": {
          "operationId": "FlatsController_getLikeFlat",
          "parameters": [
            {
              "name": "flatId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ]
        }
      },
      "/api/v1/properties/houses/flats/{flatId}/bookmarks": {
        "get": {
          "operationId": "FlatsController_getBookmarks",
          "parameters": [
            {
              "name": "flatId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ]
        }
      },
      "/api/v1/properties/houses/flats/{flatId}": {
        "patch": {
          "operationId": "FlatsController_update",
          "parameters": [
            {
              "name": "flatId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateFlatDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "FlatsController_remove",
          "parameters": [
            {
              "name": "flatId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "FlatsController_getFlat",
          "parameters": [
            {
              "name": "flatId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ]
        }
      },
      "/api/v1/properties/houses/flats/{flatId}/tenants/{tenantId}": {
        "put": {
          "operationId": "FlatsController_assignFlatToTenant",
          "parameters": [
            {
              "name": "flatId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "tenantId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/houses/flats/metrics": {
        "get": {
          "operationId": "FlatsController_findReport",
          "parameters": [
            {
              "name": "isKitchenShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isBathroomShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isToiletShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isSharedSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byActive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byArchive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPin",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfBathrooms",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfToilets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfPets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfChildren",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfInfants",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfAdults",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "groupBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "HOUSE",
                  "FLAT",
                  "OWNER",
                  "TENANT",
                  "PROPERTY_MANAGER",
                  "CARETAKER",
                  "USER",
                  "_id",
                  "TYPE",
                  "ENTITY_TYPE",
                  "ENTITY"
                ],
                "type": "string"
              }
            },
            {
              "name": "flatByNextPaymentDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-09-01,2023-09-30",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByCurrentPaymentDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-09-01,2023-09-30",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByIsCurrentRentServicePaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByIsCurrentRentPaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByReferenceCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByPaymentModes",
              "required": false,
              "in": "query",
              "description": "All separated by comma of DAILY,WEEKLY,MONHTLY,YEARLY",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByEmails",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByIsOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByHouseIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByTenantIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByOwnerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "dayOfWeekWithDateRange",
              "required": false,
              "in": "query",
              "description": "Using dayOfweek with MetricDateRange will plot it between Sunday-Saturday, use 1 for to flag yes or 0/",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasVideo",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/houses/flats/{flatId}/archive": {
        "patch": {
          "operationId": "FlatsAdminsController_toggleArchive",
          "parameters": [
            {
              "name": "flatId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/houses/flats/{flatId}/pin": {
        "patch": {
          "operationId": "FlatsAdminsController_togglePin",
          "parameters": [
            {
              "name": "flatId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/houses/flats/{flatId}/active": {
        "patch": {
          "operationId": "FlatsAdminsController_toggleActive",
          "parameters": [
            {
              "name": "flatId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/houses/flats": {
        "post": {
          "operationId": "FlatsAdminsController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFlatDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "FlatsAdminsController_findFlats",
          "parameters": [
            {
              "name": "flatByPriceRange",
              "required": false,
              "in": "query",
              "description": "Eg: 500,1000",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isKitchenShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isBathroomShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isToiletShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isSharedSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byActive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byArchive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPin",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfBathrooms",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfToilets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfPets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfChildren",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfInfants",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfAdults",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByNextPaymentDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-09-01,2023-09-30",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByCurrentPaymentDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-09-01,2023-09-30",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByIsCurrentRentServicePaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByIsCurrentRentPaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByReferenceCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByPaymentModes",
              "required": false,
              "in": "query",
              "description": "All separated by comma of DAILY,WEEKLY,MONHTLY,YEARLY",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByEmails",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByHouseIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByTenantIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByOwnerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasVideo",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "FOLLOW",
                  "LIKE",
                  "SUPER_LIKE",
                  "WATCH",
                  "CUSTOMER",
                  "VIEW",
                  "NEW_COMMENT",
                  "REPLY_COMMENT",
                  "BLOCK",
                  "BOOKMARK"
                ],
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/houses/flats/{flatId}/bookings": {
        "post": {
          "operationId": "FlatsAdminsController_bookHouseFlat",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HousePaymentChargeDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/houses/flats/{flatId}/video/upload": {
        "patch": {
          "operationId": "FlatsAdminsController_uploadProductVideo",
          "parameters": [
            {
              "name": "flatId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/houses/flats/{flatId}": {
        "patch": {
          "operationId": "FlatsAdminsController_update",
          "parameters": [
            {
              "name": "flatId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateFlatDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/houses/flats/{flatId}/owners/{ownerId}": {
        "delete": {
          "operationId": "FlatsAdminsController_remove",
          "parameters": [
            {
              "name": "flatId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/houses/flats/{flatId}/owners/{ownerId}/tenants/{tenantId}": {
        "put": {
          "operationId": "FlatsAdminsController_assignFlatToTenant",
          "parameters": [
            {
              "name": "flatId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "tenantId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/houses/flats/metrics": {
        "get": {
          "operationId": "FlatsAdminsController_findReport",
          "parameters": [
            {
              "name": "isKitchenShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isBathroomShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isToiletShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isSharedSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byActive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byArchive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPin",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfBathrooms",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfToilets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfPets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfChildren",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfInfants",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfAdults",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "groupBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "HOUSE",
                  "FLAT",
                  "OWNER",
                  "TENANT",
                  "PROPERTY_MANAGER",
                  "CARETAKER",
                  "USER",
                  "_id",
                  "TYPE",
                  "ENTITY_TYPE",
                  "ENTITY"
                ],
                "type": "string"
              }
            },
            {
              "name": "flatByNextPaymentDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-09-01,2023-09-30",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByCurrentPaymentDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-09-01,2023-09-30",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByIsCurrentRentServicePaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByIsCurrentRentPaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByReferenceCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByPaymentModes",
              "required": false,
              "in": "query",
              "description": "All separated by comma of DAILY,WEEKLY,MONHTLY,YEARLY",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByEmails",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByHouseIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByTenantIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByOwnerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "flatSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "dayOfWeekWithDateRange",
              "required": false,
              "in": "query",
              "description": "Using dayOfweek with MetricDateRange will plot it between Sunday-Saturday, use 1 for to flag yes or 0/",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasVideo",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/houses/{houseId}/boost": {
        "patch": {
          "operationId": "HousesController_boostPayment",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoostPostDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/houses/{houseId}/book-inspection": {
        "patch": {
          "operationId": "HousesController_bookInspection",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookPropertyInspectionDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/houses/{houseId}/archive": {
        "patch": {
          "operationId": "HousesController_toggleArchive",
          "parameters": [
            {
              "name": "houseId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/houses/{houseId}/pin": {
        "patch": {
          "operationId": "HousesController_togglePin",
          "parameters": [
            {
              "name": "houseId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/houses": {
        "post": {
          "operationId": "HousesController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateHouseDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "HousesController_findHouses",
          "parameters": [
            {
              "name": "isListing",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasVideo",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byApartmentTypes",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byLocations",
              "required": false,
              "in": "query",
              "description": "e.g: longitude,latitude,KM or -40.943,29.2933,20",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByCountries",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByCities",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByStates",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byActive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPriceRange",
              "required": false,
              "in": "query",
              "description": "Amount separated by comma, eg: 2000,6000, low,higher",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byArchive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPin",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByCaretakerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByPropertyManagerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByOwnerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isNearbyAmenities",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasSecurityFeature",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOutdoorSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isFurnished",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "parkingSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isPetFriendly",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByIsOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "FOLLOW",
                  "LIKE",
                  "SUPER_LIKE",
                  "WATCH",
                  "CUSTOMER",
                  "VIEW",
                  "NEW_COMMENT",
                  "REPLY_COMMENT",
                  "BLOCK",
                  "BOOKMARK"
                ],
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ]
        }
      },
      "/api/v1/properties/houses/{houseId}/video/upload": {
        "patch": {
          "operationId": "HousesController_uploadProductVideo",
          "parameters": [
            {
              "name": "houseId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/houses/{houseId}/like": {
        "patch": {
          "operationId": "HousesController_likeHouse",
          "parameters": [
            {
              "name": "houseId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/houses/{houseId}/unlike": {
        "patch": {
          "operationId": "HousesController_unlikeHouse",
          "parameters": [
            {
              "name": "houseId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/houses/{houseId}/bookmark": {
        "patch": {
          "operationId": "HousesController_bookmarkHouse",
          "parameters": [
            {
              "name": "houseId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/houses/{houseId}/unbookmark": {
        "patch": {
          "operationId": "HousesController_unBookmarkHouse",
          "parameters": [
            {
              "name": "houseId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/houses/{houseId}/bookmarks": {
        "get": {
          "operationId": "HousesController_getBookmarks",
          "parameters": [
            {
              "name": "houseId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ]
        }
      },
      "/api/v1/properties/houses/{houseId}/likes": {
        "get": {
          "operationId": "HousesController_getLikeHouse",
          "parameters": [
            {
              "name": "houseId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ]
        }
      },
      "/api/v1/properties/houses/{houseId}": {
        "patch": {
          "operationId": "HousesController_update",
          "parameters": [
            {
              "name": "houseId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateHouseDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "HousesController_remove",
          "parameters": [
            {
              "name": "houseId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "HousesController_getHouse",
          "parameters": [
            {
              "name": "houseId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ]
        }
      },
      "/api/v1/properties/houses/metrics": {
        "get": {
          "operationId": "HousesController_findReport",
          "parameters": [
            {
              "name": "byApartmentTypes",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByCountries",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByCities",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByStates",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByCaretakerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByPropertyManagerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByOwnerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isNearbyAmenities",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasSecurityFeature",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOutdoorSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isFurnished",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "parkingSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isPetFriendly",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByIsOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byLocations",
              "required": false,
              "in": "query",
              "description": "e.g: longitude,latitude,KM or -40.943,29.2933,20",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "groupBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "HOUSE",
                  "FLAT",
                  "OWNER",
                  "TENANT",
                  "PROPERTY_MANAGER",
                  "CARETAKER",
                  "USER",
                  "_id",
                  "TYPE",
                  "ENTITY_TYPE",
                  "ENTITY"
                ],
                "type": "string"
              }
            },
            {
              "name": "byActive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPriceRange",
              "required": false,
              "in": "query",
              "description": "Amount separated by comma, eg: 2000,6000, low,higher",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byArchive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPin",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "dayOfWeekWithDateRange",
              "required": false,
              "in": "query",
              "description": "Using dayOfweek with MetricDateRange will plot it between Sunday-Saturday, use 1 for to flag yes or 0/",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasVideo",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/houses/inspections": {
        "get": {
          "operationId": "HousesController_findInspections",
          "parameters": [
            {
              "name": "inspectionByEntityTypes",
              "required": false,
              "in": "query",
              "description": "One or more of USER,HOUSE,FLAT,HOTEL,ROOM,SHORT_LET,POST,AD,SERVICE_REQUEST,COMMENT,REVIEW separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "inspectionByEntityIds",
              "required": false,
              "in": "query",
              "description": "separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "inspectionByOwnerIds",
              "required": false,
              "in": "query",
              "description": "separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "inspectionByTenantIds",
              "required": false,
              "in": "query",
              "description": "separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "inspectionByIds",
              "required": false,
              "in": "query",
              "description": "separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "inspectionByIsPaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "FOLLOW",
                  "LIKE",
                  "SUPER_LIKE",
                  "WATCH",
                  "CUSTOMER",
                  "VIEW",
                  "NEW_COMMENT",
                  "REPLY_COMMENT",
                  "BLOCK",
                  "BOOKMARK"
                ],
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/houses/inspections/metrics": {
        "get": {
          "operationId": "HousesController_findInspectionReport",
          "parameters": [
            {
              "name": "inspectionByEntityTypes",
              "required": false,
              "in": "query",
              "description": "One or more of USER,HOUSE,FLAT,HOTEL,ROOM,SHORT_LET,POST,AD,SERVICE_REQUEST,COMMENT,REVIEW separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "inspectionByEntityIds",
              "required": false,
              "in": "query",
              "description": "separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "inspectionByOwnerIds",
              "required": false,
              "in": "query",
              "description": "separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "inspectionByTenantIds",
              "required": false,
              "in": "query",
              "description": "separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "inspectionByIds",
              "required": false,
              "in": "query",
              "description": "separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "inspectionByIsPaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "dayOfWeekWithDateRange",
              "required": false,
              "in": "query",
              "description": "Using dayOfweek with MetricDateRange will plot it between Sunday-Saturday, use 1 for to flag yes or 0/",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/houses/{houseId}/archive": {
        "patch": {
          "operationId": "HousesAdminsController_toggleArchive",
          "parameters": [
            {
              "name": "houseId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/houses/{houseId}/book-inspection": {
        "patch": {
          "operationId": "HousesAdminsController_bookInspection",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookPropertyInspectionDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/houses/{houseId}/pin": {
        "patch": {
          "operationId": "HousesAdminsController_togglePin",
          "parameters": [
            {
              "name": "houseId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/houses/{houseId}/active": {
        "patch": {
          "operationId": "HousesAdminsController_toggleActive",
          "parameters": [
            {
              "name": "houseId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/houses": {
        "post": {
          "operationId": "HousesAdminsController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateHouseDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "HousesAdminsController_findHouses",
          "parameters": [
            {
              "name": "byApartmentTypes",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byLocations",
              "required": false,
              "in": "query",
              "description": "e.g: longitude,latitude,KM or -40.943,29.2933,20",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByCountries",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByCities",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByStates",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByCaretakerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByPropertyManagerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByOwnerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isNearbyAmenities",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasSecurityFeature",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOutdoorSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isFurnished",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "parkingSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isPetFriendly",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByIsOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byActive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPriceRange",
              "required": false,
              "in": "query",
              "description": "Amount separated by comma, eg: 2000,6000, low,higher",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byArchive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPin",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "FOLLOW",
                  "LIKE",
                  "SUPER_LIKE",
                  "WATCH",
                  "CUSTOMER",
                  "VIEW",
                  "NEW_COMMENT",
                  "REPLY_COMMENT",
                  "BLOCK",
                  "BOOKMARK"
                ],
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/houses/{houseId}/video/upload": {
        "patch": {
          "operationId": "HousesAdminsController_uploadProductVideo",
          "parameters": [
            {
              "name": "houseId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/houses/{houseId}": {
        "patch": {
          "operationId": "HousesAdminsController_update",
          "parameters": [
            {
              "name": "houseId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateHouseDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/houses/platform-charge/settings": {
        "put": {
          "operationId": "HousesAdminsController_addPlatformChargeDto",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPlatformChargeDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/houses/{houseId}/owners/{ownerId}": {
        "delete": {
          "operationId": "HousesAdminsController_remove",
          "parameters": [
            {
              "name": "houseId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/houses/metrics": {
        "get": {
          "operationId": "HousesAdminsController_findReport",
          "parameters": [
            {
              "name": "byApartmentTypes",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byLocations",
              "required": false,
              "in": "query",
              "description": "e.g: longitude,latitude,KM or -40.943,29.2933,20",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByCountries",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByCities",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByStates",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByCaretakerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByPropertyManagerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByOwnerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isNearbyAmenities",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasSecurityFeature",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOutdoorSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isFurnished",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "parkingSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isPetFriendly",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByIsOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "dayOfWeekWithDateRange",
              "required": false,
              "in": "query",
              "description": "Using dayOfweek with MetricDateRange will plot it between Sunday-Saturday, use 1 for to flag yes or 0/",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byActive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPriceRange",
              "required": false,
              "in": "query",
              "description": "Amount separated by comma, eg: 2000,6000, low,higher",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byArchive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPin",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/houses/inspections": {
        "get": {
          "operationId": "HousesAdminsController_findInspections",
          "parameters": [
            {
              "name": "inspectionByEntityTypes",
              "required": false,
              "in": "query",
              "description": "One or more of USER,HOUSE,FLAT,HOTEL,ROOM,SHORT_LET,POST,AD,SERVICE_REQUEST,COMMENT,REVIEW separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "inspectionByEntityIds",
              "required": false,
              "in": "query",
              "description": "separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "inspectionByOwnerIds",
              "required": false,
              "in": "query",
              "description": "separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "inspectionByTenantIds",
              "required": false,
              "in": "query",
              "description": "separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "inspectionByIds",
              "required": false,
              "in": "query",
              "description": "separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "inspectionByIsPaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "FOLLOW",
                  "LIKE",
                  "SUPER_LIKE",
                  "WATCH",
                  "CUSTOMER",
                  "VIEW",
                  "NEW_COMMENT",
                  "REPLY_COMMENT",
                  "BLOCK",
                  "BOOKMARK"
                ],
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/houses/inspections/metrics": {
        "get": {
          "operationId": "HousesAdminsController_findInspectionReport",
          "parameters": [
            {
              "name": "inspectionByEntityTypes",
              "required": false,
              "in": "query",
              "description": "One or more of USER,HOUSE,FLAT,HOTEL,ROOM,SHORT_LET,POST,AD,SERVICE_REQUEST,COMMENT,REVIEW separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "inspectionByEntityIds",
              "required": false,
              "in": "query",
              "description": "separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "inspectionByOwnerIds",
              "required": false,
              "in": "query",
              "description": "separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "inspectionByTenantIds",
              "required": false,
              "in": "query",
              "description": "separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "inspectionByIds",
              "required": false,
              "in": "query",
              "description": "separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "inspectionByIsPaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "dayOfWeekWithDateRange",
              "required": false,
              "in": "query",
              "description": "Using dayOfweek with MetricDateRange will plot it between Sunday-Saturday, use 1 for to flag yes or 0/",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/hotels/rooms/{roomId}/archive": {
        "patch": {
          "operationId": "RoomsController_toggleArchive",
          "parameters": [
            {
              "name": "roomId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/hotels/rooms/{roomId}/pin": {
        "patch": {
          "operationId": "RoomsController_togglePin",
          "parameters": [
            {
              "name": "roomId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/hotels/rooms": {
        "post": {
          "operationId": "RoomsController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRoomDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "RoomsController_findRooms",
          "parameters": [
            {
              "name": "roomByPriceRange",
              "required": false,
              "in": "query",
              "description": "Eg: 500,1000",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isKitchenShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isBathroomShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isToiletShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isSharedSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byActive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byArchive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPin",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfBathrooms",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfToilets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfPets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfChildren",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfInfants",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfAdults",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByStartEndDateRange",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-06-21",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByEndDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-01-01",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByStartDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-01-01",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByIsOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByIsCurrentRentServicePaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByIsCurrentRentPaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByHotelIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByTenantIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByOwnerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasVideo",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "FOLLOW",
                  "LIKE",
                  "SUPER_LIKE",
                  "WATCH",
                  "CUSTOMER",
                  "VIEW",
                  "NEW_COMMENT",
                  "REPLY_COMMENT",
                  "BLOCK",
                  "BOOKMARK"
                ],
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ]
        }
      },
      "/api/v1/properties/hotels/rooms/{roomId}/bookings": {
        "post": {
          "operationId": "RoomsController_bookHotelRoom",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HotelPaymentChargeDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/hotels/rooms/{roomId}/video/upload": {
        "patch": {
          "operationId": "RoomsController_uploadProductVideo",
          "parameters": [
            {
              "name": "roomId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/hotels/rooms/{roomId}/hotels/{hotelId}/like": {
        "patch": {
          "operationId": "RoomsController_likeRoom",
          "parameters": [
            {
              "name": "roomId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/hotels/rooms/{roomId}/hotels/{hotelId}/unlike": {
        "patch": {
          "operationId": "RoomsController_unlikeRoom",
          "parameters": [
            {
              "name": "roomId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/hotels/rooms/{roomId}/hotels/{hotelId}/bookmark": {
        "patch": {
          "operationId": "RoomsController_bookmarkRoom",
          "parameters": [
            {
              "name": "roomId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/hotels/rooms/{roomId}/hotels/{hotelId}/unbookmark": {
        "patch": {
          "operationId": "RoomsController_unBookmarkRoom",
          "parameters": [
            {
              "name": "roomId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/hotels/rooms/{roomId}/likes": {
        "get": {
          "operationId": "RoomsController_getLikeRoom",
          "parameters": [
            {
              "name": "roomId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ]
        }
      },
      "/api/v1/properties/hotels/rooms/{roomId}/bookmarks": {
        "get": {
          "operationId": "RoomsController_getBookmarks",
          "parameters": [
            {
              "name": "roomId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ]
        }
      },
      "/api/v1/properties/hotels/rooms/{roomId}": {
        "patch": {
          "operationId": "RoomsController_update",
          "parameters": [
            {
              "name": "roomId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRoomDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "RoomsController_remove",
          "parameters": [
            {
              "name": "roomId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "RoomsController_getRoom",
          "parameters": [
            {
              "name": "roomId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ]
        }
      },
      "/api/v1/properties/hotels/rooms/{roomId}/tenants/{tenantId}": {
        "put": {
          "operationId": "RoomsController_assignRoomToTenant",
          "parameters": [
            {
              "name": "roomId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "tenantId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/hotels/rooms/metrics": {
        "get": {
          "operationId": "RoomsController_findReport",
          "parameters": [
            {
              "name": "isKitchenShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isBathroomShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isToiletShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isSharedSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byActive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byArchive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPin",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfBathrooms",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfToilets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfPets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfChildren",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfInfants",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfAdults",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByStartEndDateRange",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-06-21",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByEndDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-01-01",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByStartDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-01-01",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByIsOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByIsCurrentRentServicePaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByIsCurrentRentPaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByHotelIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByTenantIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByOwnerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "groupBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "HOUSE",
                  "FLAT",
                  "OWNER",
                  "TENANT",
                  "PROPERTY_MANAGER",
                  "CARETAKER",
                  "USER",
                  "_id",
                  "TYPE",
                  "ENTITY_TYPE",
                  "ENTITY"
                ],
                "type": "string"
              }
            },
            {
              "name": "dayOfWeekWithDateRange",
              "required": false,
              "in": "query",
              "description": "Using dayOfweek with MetricDateRange will plot it between Sunday-Saturday, use 1 for to flag yes or 0/",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasVideo",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/hotels/rooms/{roomId}/archive": {
        "patch": {
          "operationId": "RoomsAdminsController_toggleArchive",
          "parameters": [
            {
              "name": "roomId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/hotels/rooms/{roomId}/pin": {
        "patch": {
          "operationId": "RoomsAdminsController_togglePin",
          "parameters": [
            {
              "name": "roomId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/hotels/rooms/{roomId}/active": {
        "patch": {
          "operationId": "RoomsAdminsController_toggleActive",
          "parameters": [
            {
              "name": "roomId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/hotels/rooms": {
        "post": {
          "operationId": "RoomsAdminsController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRoomDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "RoomsAdminsController_findRooms",
          "parameters": [
            {
              "name": "roomByPriceRange",
              "required": false,
              "in": "query",
              "description": "Eg: 500,1000",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isKitchenShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isBathroomShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isToiletShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isSharedSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfBathrooms",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byActive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byArchive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPin",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfToilets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfPets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfChildren",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfInfants",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfAdults",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByStartEndDateRange",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-06-21",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByEndDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-01-01",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByStartDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-01-01",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByIsOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByIsCurrentRentServicePaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByIsCurrentRentPaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByHotelIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByTenantIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByOwnerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasVideo",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "FOLLOW",
                  "LIKE",
                  "SUPER_LIKE",
                  "WATCH",
                  "CUSTOMER",
                  "VIEW",
                  "NEW_COMMENT",
                  "REPLY_COMMENT",
                  "BLOCK",
                  "BOOKMARK"
                ],
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/hotels/rooms/{roomId}/bookings": {
        "post": {
          "operationId": "RoomsAdminsController_bookHotelRoom",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HotelPaymentChargeDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/hotels/rooms/{roomId}/video/upload": {
        "patch": {
          "operationId": "RoomsAdminsController_uploadProductVideo",
          "parameters": [
            {
              "name": "roomId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/hotels/rooms/{roomId}": {
        "patch": {
          "operationId": "RoomsAdminsController_update",
          "parameters": [
            {
              "name": "roomId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRoomDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/hotels/rooms/{roomId}/owners/{ownerId}": {
        "delete": {
          "operationId": "RoomsAdminsController_remove",
          "parameters": [
            {
              "name": "roomId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/hotels/rooms/{roomId}/owners/{ownerId}/tenants/{tenantId}": {
        "put": {
          "operationId": "RoomsAdminsController_assignRoomToTenant",
          "parameters": [
            {
              "name": "roomId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "tenantId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/hotels/rooms/metrics": {
        "get": {
          "operationId": "RoomsAdminsController_findReport",
          "parameters": [
            {
              "name": "isKitchenShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isBathroomShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isToiletShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isSharedSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byActive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byArchive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPin",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfBathrooms",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfToilets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfPets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfChildren",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfInfants",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfAdults",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByStartEndDateRange",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-06-21",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByEndDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-01-01",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByStartDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-01-01",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByIsOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByIsCurrentRentServicePaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByIsCurrentRentPaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByHotelIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByTenantIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByOwnerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "roomSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "groupBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "HOUSE",
                  "FLAT",
                  "OWNER",
                  "TENANT",
                  "PROPERTY_MANAGER",
                  "CARETAKER",
                  "USER",
                  "_id",
                  "TYPE",
                  "ENTITY_TYPE",
                  "ENTITY"
                ],
                "type": "string"
              }
            },
            {
              "name": "dayOfWeekWithDateRange",
              "required": false,
              "in": "query",
              "description": "Using dayOfweek with MetricDateRange will plot it between Sunday-Saturday, use 1 for to flag yes or 0/",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasVideo",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/hotels/{hotelId}/boost": {
        "patch": {
          "operationId": "HotelsController_boostPayment",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoostPostDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/hotels/{hotelId}/archive": {
        "patch": {
          "operationId": "HotelsController_toggleArchive",
          "parameters": [
            {
              "name": "hotelId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/hotels/{hotelId}/pin": {
        "patch": {
          "operationId": "HotelsController_togglePin",
          "parameters": [
            {
              "name": "hotelId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/hotels": {
        "post": {
          "operationId": "HotelsController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateHotelDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "HotelsController_findHotels",
          "parameters": [
            {
              "name": "isListing",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByCountries",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByCities",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByStates",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byLocations",
              "required": false,
              "in": "query",
              "description": "e.g: longitude,latitude,KM or -40.943,29.2933,20",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByIsOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByHasRoom",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByOwnerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isNearbyAmenities",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasSecurityFeature",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOutdoorSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "parkingSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byActive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPriceRange",
              "required": false,
              "in": "query",
              "description": "Amount separated by comma, eg: 2000,6000, low,higher",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byArchive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPin",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isPetFriendly",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasVideo",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "FOLLOW",
                  "LIKE",
                  "SUPER_LIKE",
                  "WATCH",
                  "CUSTOMER",
                  "VIEW",
                  "NEW_COMMENT",
                  "REPLY_COMMENT",
                  "BLOCK",
                  "BOOKMARK"
                ],
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ]
        }
      },
      "/api/v1/properties/hotels/{hotelId}/video/upload": {
        "patch": {
          "operationId": "HotelsController_uploadProductVideo",
          "parameters": [
            {
              "name": "hotelId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/hotels/{hotelId}/like": {
        "patch": {
          "operationId": "HotelsController_likeHotel",
          "parameters": [
            {
              "name": "hotelId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/hotels/{hotelId}/unlike": {
        "patch": {
          "operationId": "HotelsController_unlikeHotel",
          "parameters": [
            {
              "name": "hotelId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/hotels/{hotelId}/likes": {
        "get": {
          "operationId": "HotelsController_getLikeHotel",
          "parameters": [
            {
              "name": "hotelId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ]
        }
      },
      "/api/v1/properties/hotels/{hotelId}/bookmark": {
        "patch": {
          "operationId": "HotelsController_bookmarkHotel",
          "parameters": [
            {
              "name": "hotelId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/hotels/{hotelId}/unbookmark": {
        "patch": {
          "operationId": "HotelsController_unBookmarkHotel",
          "parameters": [
            {
              "name": "hotelId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/hotels/{hotelId}/bookmarks": {
        "get": {
          "operationId": "HotelsController_getBookmarkHotel",
          "parameters": [
            {
              "name": "hotelId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ]
        }
      },
      "/api/v1/properties/hotels/{hotelId}": {
        "patch": {
          "operationId": "HotelsController_update",
          "parameters": [
            {
              "name": "hotelId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateHotelDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "HotelsController_remove",
          "parameters": [
            {
              "name": "hotelId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "HotelsController_getHotel",
          "parameters": [
            {
              "name": "hotelId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ]
        }
      },
      "/api/v1/properties/hotels/metrics": {
        "get": {
          "operationId": "HotelsController_findReport",
          "parameters": [
            {
              "name": "hotelByCountries",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByCities",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByStates",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byLocations",
              "required": false,
              "in": "query",
              "description": "e.g: longitude,latitude,KM or -40.943,29.2933,20",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByHasRoom",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByOwnerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByIsOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isNearbyAmenities",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasSecurityFeature",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOutdoorSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "parkingSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isPetFriendly",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "groupBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "HOUSE",
                  "FLAT",
                  "OWNER",
                  "TENANT",
                  "PROPERTY_MANAGER",
                  "CARETAKER",
                  "USER",
                  "_id",
                  "TYPE",
                  "ENTITY_TYPE",
                  "ENTITY"
                ],
                "type": "string"
              }
            },
            {
              "name": "dayOfWeekWithDateRange",
              "required": false,
              "in": "query",
              "description": "Using dayOfweek with MetricDateRange will plot it between Sunday-Saturday, use 1 for to flag yes or 0/",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byActive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPriceRange",
              "required": false,
              "in": "query",
              "description": "Amount separated by comma, eg: 2000,6000, low,higher",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byArchive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPin",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasVideo",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/hotels/{hotelId}/archive": {
        "patch": {
          "operationId": "HotelsAdminsController_toggleArchive",
          "parameters": [
            {
              "name": "hotelId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/hotels/{hotelId}/pin": {
        "patch": {
          "operationId": "HotelsAdminsController_togglePin",
          "parameters": [
            {
              "name": "hotelId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/hotels/{hotelId}/active": {
        "patch": {
          "operationId": "HotelsAdminsController_toggleActive",
          "parameters": [
            {
              "name": "hotelId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/hotels": {
        "post": {
          "operationId": "HotelsAdminsController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateHotelDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "HotelsAdminsController_findHotels",
          "parameters": [
            {
              "name": "hotelByCountries",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByCities",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByStates",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byLocations",
              "required": false,
              "in": "query",
              "description": "e.g: longitude,latitude,KM or -40.943,29.2933,20",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByIsOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByHasRoom",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByOwnerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isNearbyAmenities",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasSecurityFeature",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOutdoorSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "parkingSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isPetFriendly",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byActive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPriceRange",
              "required": false,
              "in": "query",
              "description": "Amount separated by comma, eg: 2000,6000, low,higher",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byArchive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPin",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasVideo",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "FOLLOW",
                  "LIKE",
                  "SUPER_LIKE",
                  "WATCH",
                  "CUSTOMER",
                  "VIEW",
                  "NEW_COMMENT",
                  "REPLY_COMMENT",
                  "BLOCK",
                  "BOOKMARK"
                ],
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/hotels/{hotelId}": {
        "patch": {
          "operationId": "HotelsAdminsController_update",
          "parameters": [
            {
              "name": "hotelId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateHotelDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/hotels/{hotelId}/video/upload": {
        "patch": {
          "operationId": "HotelsAdminsController_uploadProductVideo",
          "parameters": [
            {
              "name": "hotelId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/hotels/platform-charge/settings": {
        "put": {
          "operationId": "HotelsAdminsController_addPlatformChargeDto",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPlatformChargeDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/hotels/{hotelId}/owners/{ownerId}": {
        "delete": {
          "operationId": "HotelsAdminsController_remove",
          "parameters": [
            {
              "name": "hotelId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/properties/hotels/metrics": {
        "get": {
          "operationId": "HotelsAdminsController_findReport",
          "parameters": [
            {
              "name": "hotelByCountries",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByCities",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByStates",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byLocations",
              "required": false,
              "in": "query",
              "description": "e.g: longitude,latitude,KM or -40.943,29.2933,20",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByHasRoom",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByIsOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByOwnerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isNearbyAmenities",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasSecurityFeature",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOutdoorSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "parkingSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isPetFriendly",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hotelSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "dayOfWeekWithDateRange",
              "required": false,
              "in": "query",
              "description": "Using dayOfweek with MetricDateRange will plot it between Sunday-Saturday, use 1 for to flag yes or 0/",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byActive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPriceRange",
              "required": false,
              "in": "query",
              "description": "Amount separated by comma, eg: 2000,6000, low,higher",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byArchive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPin",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasVideo",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "groupBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "HOUSE",
                  "FLAT",
                  "OWNER",
                  "TENANT",
                  "PROPERTY_MANAGER",
                  "CARETAKER",
                  "USER",
                  "_id",
                  "TYPE",
                  "ENTITY_TYPE",
                  "ENTITY"
                ],
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/short-lets/{shortLetId}/boost": {
        "patch": {
          "operationId": "ShortLetsController_boostPayment",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoostPostDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/short-lets/{shortLetId}/archive": {
        "patch": {
          "operationId": "ShortLetsController_toggleArchive",
          "parameters": [
            {
              "name": "shortLetId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/short-lets/{shortLetId}/pin": {
        "patch": {
          "operationId": "ShortLetsController_togglePin",
          "parameters": [
            {
              "name": "shortLetId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/short-lets": {
        "post": {
          "operationId": "ShortLetsController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateShortLetDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "ShortLetsController_findShortLets",
          "parameters": [
            {
              "name": "shortLetByPriceRange",
              "required": false,
              "in": "query",
              "description": "Eg: 500,1000",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isListing",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byActive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPriceRange",
              "required": false,
              "in": "query",
              "description": "Amount separated by comma, eg: 2000,6000, low,higher",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byArchive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPin",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByPaymentModes",
              "required": false,
              "in": "query",
              "description": "any one or more of DAILY,WEEKLY,MONHTLY,YEARLY",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByStartEndDateRange",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-06-21",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByEndDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-01-01",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByStartDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-01-01",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isKitchenShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isBathroomShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isToiletShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isSharedSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isNearbyAmenities",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasSecurityFeature",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOutdoorSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isFurnished",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "parkingSize",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isPetFriendly",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byApartmentTypes",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfBathrooms",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfToilets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfPets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfChildren",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfInfants",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasVideo",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfAdults",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byLocations",
              "required": false,
              "in": "query",
              "description": "e.g: longitude,latitude,KM or -40.943,29.2933,20",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByIsOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByIsCurrentRentServicePaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByIsCurrentRentPaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByCountries",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByCities",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByStates",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByTenantIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByOwnerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "FOLLOW",
                  "LIKE",
                  "SUPER_LIKE",
                  "WATCH",
                  "CUSTOMER",
                  "VIEW",
                  "NEW_COMMENT",
                  "REPLY_COMMENT",
                  "BLOCK",
                  "BOOKMARK"
                ],
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ]
        }
      },
      "/api/v1/properties/short-lets/{shortLetId}/bookings": {
        "post": {
          "operationId": "ShortLetsController_bookShortLet",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShortLetPaymentChargeDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/short-lets/{shortLetId}/video/upload": {
        "patch": {
          "operationId": "ShortLetsController_uploadProductVideo",
          "parameters": [
            {
              "name": "shortLetId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/short-lets/{shortLetId}/like": {
        "patch": {
          "operationId": "ShortLetsController_likeShortLet",
          "parameters": [
            {
              "name": "shortLetId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/short-lets/{shortLetId}/unlike": {
        "patch": {
          "operationId": "ShortLetsController_unlikeShortLet",
          "parameters": [
            {
              "name": "shortLetId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/short-lets/{shortLetId}/bookmark": {
        "patch": {
          "operationId": "ShortLetsController_bookmarkShortLet",
          "parameters": [
            {
              "name": "shortLetId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/short-lets/{shortLetId}/unbookmark": {
        "patch": {
          "operationId": "ShortLetsController_unBookmarkShortLet",
          "parameters": [
            {
              "name": "shortLetId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/properties/short-lets/{shortLetId}/likes": {
        "get": {
          "operationId": "ShortLetsController_getLikeShortLet",
          "parameters": [
            {
              "name": "shortLetId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ]
        }
      },
      "/api/v1/properties/short-lets/{shortLetId}/bookmarks": {
        "get": {
          "operationId": "ShortLetsController_getBookmarkShortLet",
          "parameters": [
            {
              "name": "shortLetId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ]
        }
      },
      "/api/v1/properties/short-lets/{shortLetId}": {
        "patch": {
          "operationId": "ShortLetsController_update",
          "parameters": [
            {
              "name": "shortLetId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateShortLetDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "ShortLetsController_remove",
          "parameters": [
            {
              "name": "shortLetId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "ShortLetsController_getShortLet",
          "parameters": [
            {
              "name": "shortLetId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ]
        }
      },
      "/api/v1/properties/short-lets/metrics": {
        "get": {
          "operationId": "ShortLetsController_findReport",
          "parameters": [
            {
              "name": "shortLetByPaymentModes",
              "required": false,
              "in": "query",
              "description": "any one or more of DAILY,WEEKLY,MONHTLY,YEARLY",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByStartEndDateRange",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-06-21",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByEndDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-01-01",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByStartDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-01-01",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isKitchenShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isBathroomShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isToiletShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isSharedSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isNearbyAmenities",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasSecurityFeature",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOutdoorSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isFurnished",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "parkingSize",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isPetFriendly",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byApartmentTypes",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfBathrooms",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfToilets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfPets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfChildren",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfInfants",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfAdults",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byLocations",
              "required": false,
              "in": "query",
              "description": "e.g: longitude,latitude,KM or -40.943,29.2933,20",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByIsOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByIsCurrentRentServicePaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByIsCurrentRentPaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByCountries",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByCities",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByStates",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByTenantIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByOwnerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "groupBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "HOUSE",
                  "FLAT",
                  "OWNER",
                  "TENANT",
                  "PROPERTY_MANAGER",
                  "CARETAKER",
                  "USER",
                  "_id",
                  "TYPE",
                  "ENTITY_TYPE",
                  "ENTITY"
                ],
                "type": "string"
              }
            },
            {
              "name": "dayOfWeekWithDateRange",
              "required": false,
              "in": "query",
              "description": "Using dayOfweek with MetricDateRange will plot it between Sunday-Saturday, use 1 for to flag yes or 0/",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byActive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPriceRange",
              "required": false,
              "in": "query",
              "description": "Amount separated by comma, eg: 2000,6000, low,higher",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byArchive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPin",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasVideo",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "properties"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/short-lets/{shortLetId}/archive": {
        "patch": {
          "operationId": "ShortLetsAdminsController_toggleArchive",
          "parameters": [
            {
              "name": "shortLetId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/short-lets/{shortLetId}/pin": {
        "patch": {
          "operationId": "ShortLetsAdminsController_togglePin",
          "parameters": [
            {
              "name": "shortLetId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/short-lets/{shortLetId}/active": {
        "patch": {
          "operationId": "ShortLetsAdminsController_toggleActive",
          "parameters": [
            {
              "name": "shortLetId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/short-lets": {
        "post": {
          "operationId": "ShortLetsAdminsController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateShortLetDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "ShortLetsAdminsController_findShortLets",
          "parameters": [
            {
              "name": "shortLetByPaymentModes",
              "required": false,
              "in": "query",
              "description": "any one or more of DAILY,WEEKLY,MONHTLY,YEARLY",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByStartEndDateRange",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-06-21",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByEndDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-01-01",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByStartDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-01-01",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isKitchenShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isBathroomShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isToiletShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isSharedSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isNearbyAmenities",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasSecurityFeature",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOutdoorSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isFurnished",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "parkingSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isPetFriendly",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byActive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPriceRange",
              "required": false,
              "in": "query",
              "description": "Amount separated by comma, eg: 2000,6000, low,higher",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byArchive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPin",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byApartmentTypes",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfBathrooms",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfToilets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfPets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfChildren",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfInfants",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfAdults",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byLocations",
              "required": false,
              "in": "query",
              "description": "e.g: longitude,latitude,KM or -40.943,29.2933,20",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByIsOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByIsCurrentRentServicePaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByIsCurrentRentPaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByCountries",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByCities",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByStates",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByTenantIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByOwnerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasVideo",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortByOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "FOLLOW",
                  "LIKE",
                  "SUPER_LIKE",
                  "WATCH",
                  "CUSTOMER",
                  "VIEW",
                  "NEW_COMMENT",
                  "REPLY_COMMENT",
                  "BLOCK",
                  "BOOKMARK"
                ],
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/short-lets/{shortLetId}/bookings": {
        "post": {
          "operationId": "ShortLetsAdminsController_bookShortLet",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShortLetPaymentChargeDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/short-lets/{shortLetId}/video/upload": {
        "patch": {
          "operationId": "ShortLetsAdminsController_uploadProductVideo",
          "parameters": [
            {
              "name": "shortLetId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/short-lets/{shortLetId}": {
        "patch": {
          "operationId": "ShortLetsAdminsController_update",
          "parameters": [
            {
              "name": "shortLetId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateShortLetDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/short-lets/platform-charge/settings": {
        "put": {
          "operationId": "ShortLetsAdminsController_addPlatformChargeDto",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPlatformChargeDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/short-lets/{shortLetId}/owners/{ownerId}": {
        "delete": {
          "operationId": "ShortLetsAdminsController_remove",
          "parameters": [
            {
              "name": "shortLetId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/short-lets/metrics": {
        "get": {
          "operationId": "ShortLetsAdminsController_findReport",
          "parameters": [
            {
              "name": "shortLetByPaymentModes",
              "required": false,
              "in": "query",
              "description": "any one or more of DAILY,WEEKLY,MONHTLY,YEARLY",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByStartEndDateRange",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-06-21",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByEndDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-01-01",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByStartDate",
              "required": false,
              "in": "query",
              "description": "eg: 2023-01-01,2023-01-01",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isKitchenShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isBathroomShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isToiletShared",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isSharedSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isNearbyAmenities",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasSecurityFeature",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isOutdoorSpace",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isFurnished",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "parkingSize",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isPetFriendly",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byApartmentTypes",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfBathrooms",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfToilets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byActive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPriceRange",
              "required": false,
              "in": "query",
              "description": "Amount separated by comma, eg: 2000,6000, low,higher",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byArchive",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byPin",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfPets",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfChildren",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfInfants",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byNumberOfAdults",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByIsCurrentRentServicePaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByIsOpen",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByIsCurrentRentPaid",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byLocations",
              "required": false,
              "in": "query",
              "description": "e.g: longitude,latitude,KM or -40.943,29.2933,20",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByCountries",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByCities",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByStates",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByCodes",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByTenantIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByOwnerIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "shortLetDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "groupBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "HOUSE",
                  "FLAT",
                  "OWNER",
                  "TENANT",
                  "PROPERTY_MANAGER",
                  "CARETAKER",
                  "USER",
                  "_id",
                  "TYPE",
                  "ENTITY_TYPE",
                  "ENTITY"
                ],
                "type": "string"
              }
            },
            {
              "name": "dayOfWeekWithDateRange",
              "required": false,
              "in": "query",
              "description": "Using dayOfweek with MetricDateRange will plot it between Sunday-Saturday, use 1 for to flag yes or 0/",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hasVideo",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/complaints": {
        "post": {
          "operationId": "ComplaintsController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateComplaintDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "complaints"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "ComplaintsController_findComplaints",
          "parameters": [
            {
              "name": "complaintByStatuses",
              "required": false,
              "in": "query",
              "description": "All separated by comma using any of PENDING,CLOSED,RESOLVED",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByShowComplaint",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByShortLetIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByRoomIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByHotelIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByFlatIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByHouseIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByToIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByFromIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "complaints"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/complaints/{complaintId}": {
        "patch": {
          "operationId": "ComplaintsController_update",
          "parameters": [
            {
              "name": "complaintId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateComplaintDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "complaints"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "ComplaintsController_remove",
          "parameters": [
            {
              "name": "complaintId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "complaints"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/complaints/metrics": {
        "get": {
          "operationId": "ComplaintsController_findReport",
          "parameters": [
            {
              "name": "groupBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "HOUSE",
                  "FLAT",
                  "OWNER",
                  "TENANT",
                  "PROPERTY_MANAGER",
                  "CARETAKER",
                  "USER",
                  "_id",
                  "TYPE",
                  "ENTITY_TYPE",
                  "ENTITY"
                ],
                "type": "string"
              }
            },
            {
              "name": "complaintByShowComplaint",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByStatuses",
              "required": false,
              "in": "query",
              "description": "All separated by comma using any of PENDING,CLOSED,RESOLVED",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByRoomIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByHotelIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByFlatIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByShortLetIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByHouseIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByToIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByFromIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "dayOfWeekWithDateRange",
              "required": false,
              "in": "query",
              "description": "Using dayOfweek with MetricDateRange will plot it between Sunday-Saturday, use 1 for to flag yes or 0/",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "complaints"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/complaints": {
        "post": {
          "operationId": "ComplaintsAdminsController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateComplaintDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "ComplaintsAdminsController_findComplaints",
          "parameters": [
            {
              "name": "complaintByShowComplaint",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByStatuses",
              "required": false,
              "in": "query",
              "description": "All separated by comma using any of PENDING,CLOSED,RESOLVED",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByRoomIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByHotelIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByFlatIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByShortLetIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByHouseIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByToIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByFromIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/complaints/{complaintId}": {
        "patch": {
          "operationId": "ComplaintsAdminsController_update",
          "parameters": [
            {
              "name": "complaintId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateComplaintDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "ComplaintsAdminsController_remove",
          "parameters": [
            {
              "name": "complaintId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/complaints/metrics": {
        "get": {
          "operationId": "ComplaintsAdminsController_findReport",
          "parameters": [
            {
              "name": "groupBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "HOUSE",
                  "FLAT",
                  "OWNER",
                  "TENANT",
                  "PROPERTY_MANAGER",
                  "CARETAKER",
                  "USER",
                  "_id",
                  "TYPE",
                  "ENTITY_TYPE",
                  "ENTITY"
                ],
                "type": "string"
              }
            },
            {
              "name": "complaintByShowComplaint",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByStatuses",
              "required": false,
              "in": "query",
              "description": "All separated by comma using any of PENDING,CLOSED,RESOLVED",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByRoomIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByHotelIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByFlatIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByShortLetIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByHouseIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByToIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByFromIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintByIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "complaintDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "dayOfWeekWithDateRange",
              "required": false,
              "in": "query",
              "description": "Using dayOfweek with MetricDateRange will plot it between Sunday-Saturday, use 1 for to flag yes or 0/",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/reviews": {
        "post": {
          "operationId": "ReviewsController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateReviewDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "reviews"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "ReviewsController_findAll",
          "parameters": [
            {
              "name": "reviewPropertyManagerIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewTenantIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewCaretakerIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewShortLetIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewRoomIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewHotelIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewFlatIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewHouseIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewOwnerIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewByRate",
              "required": false,
              "in": "query",
              "description": "e.g: 1",
              "schema": {
  
              }
            },
            {
              "name": "reviewByShowReview",
              "required": false,
              "in": "query",
              "description": "e.g: 1 or 0",
              "schema": {
  
              }
            },
            {
              "name": "reviewByRateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 1,2",
              "schema": {
  
              }
            },
            {
              "name": "reviewDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "reviews"
          ]
        }
      },
      "/api/v1/reviews/{reviewId}": {
        "patch": {
          "operationId": "ReviewsController_update",
          "parameters": [
            {
              "name": "reviewId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateReviewDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "reviews"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "ReviewsController_findOne",
          "parameters": [
            {
              "name": "reviewId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "reviews"
          ]
        },
        "delete": {
          "operationId": "ReviewsController_remove",
          "parameters": [
            {
              "name": "reviewId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "reviews"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/reviews/{reviewId}/toggle": {
        "put": {
          "operationId": "ReviewsController_toggleShowReview",
          "parameters": [
            {
              "name": "reviewId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "reviews"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/reviews/metrics": {
        "get": {
          "operationId": "ReviewsController_findReport",
          "parameters": [
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "groupBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "HOUSE",
                  "FLAT",
                  "OWNER",
                  "TENANT",
                  "PROPERTY_MANAGER",
                  "CARETAKER",
                  "USER",
                  "_id",
                  "TYPE",
                  "ENTITY_TYPE",
                  "ENTITY"
                ],
                "type": "string"
              }
            },
            {
              "name": "reviewPropertyManagerIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewTenantIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewRoomIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewHotelIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewCaretakerIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewFlatIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewShortLetIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewHouseIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewOwnerIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewByRate",
              "required": false,
              "in": "query",
              "description": "e.g: 1",
              "schema": {
  
              }
            },
            {
              "name": "reviewByShowReview",
              "required": false,
              "in": "query",
              "description": "e.g: 1 or 0",
              "schema": {
  
              }
            },
            {
              "name": "reviewByRateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 1,2",
              "schema": {
  
              }
            },
            {
              "name": "reviewDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "reviews"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/reviews": {
        "post": {
          "operationId": "ReviewsAdminsController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateReviewDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "ReviewsAdminsController_findAll",
          "parameters": [
            {
              "name": "reviewPropertyManagerIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewTenantIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewRoomIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewHotelIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewCaretakerIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewFlatIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewShortLetIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewHouseIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewOwnerIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewByRate",
              "required": false,
              "in": "query",
              "description": "e.g: 1",
              "schema": {
  
              }
            },
            {
              "name": "reviewByShowReview",
              "required": false,
              "in": "query",
              "description": "e.g: 1 or 0",
              "schema": {
  
              }
            },
            {
              "name": "reviewByRateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 1,2",
              "schema": {
  
              }
            },
            {
              "name": "reviewDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/reviews/{reviewId}": {
        "patch": {
          "operationId": "ReviewsAdminsController_update",
          "parameters": [
            {
              "name": "reviewId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateReviewDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "ReviewsAdminsController_findOne",
          "parameters": [
            {
              "name": "reviewId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "ReviewsAdminsController_remove",
          "parameters": [
            {
              "name": "reviewId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/reviews/{reviewId}/toggle": {
        "put": {
          "operationId": "ReviewsAdminsController_toggleShowReview",
          "parameters": [
            {
              "name": "reviewId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/reviews/metrics": {
        "get": {
          "operationId": "ReviewsAdminsController_findReport",
          "parameters": [
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "groupBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "HOUSE",
                  "FLAT",
                  "OWNER",
                  "TENANT",
                  "PROPERTY_MANAGER",
                  "CARETAKER",
                  "USER",
                  "_id",
                  "TYPE",
                  "ENTITY_TYPE",
                  "ENTITY"
                ],
                "type": "string"
              }
            },
            {
              "name": "reviewPropertyManagerIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewTenantIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewRoomIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewHotelIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewCaretakerIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewFlatIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewShortLetIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewHouseIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewOwnerIds",
              "required": false,
              "in": "query",
              "description": "Ids separated by commas",
              "schema": {
  
              }
            },
            {
              "name": "reviewByRate",
              "required": false,
              "in": "query",
              "description": "e.g: 1",
              "schema": {
  
              }
            },
            {
              "name": "reviewByShowReview",
              "required": false,
              "in": "query",
              "description": "e.g: 1 or 0",
              "schema": {
  
              }
            },
            {
              "name": "reviewByRateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 1,2",
              "schema": {
  
              }
            },
            {
              "name": "reviewDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/payments/accounts": {
        "post": {
          "operationId": "BankPaymentsController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBankAccountDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "payments"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/payments/accounts/{userId}": {
        "patch": {
          "operationId": "BankPaymentsController_update",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBankAccountDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "payments"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "BankPaymentsController_findUserPaymentAccount",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "payments"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/payments/accounts/{paymentAccountId}": {
        "delete": {
          "operationId": "BankPaymentsController_removePaymentAccountById",
          "parameters": [
            {
              "name": "paymentAccountId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "payments"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "BankPaymentsController_findPaymentAccountById",
          "parameters": [
            {
              "name": "paymentAccountId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "payments"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/payments/users/{userId}/transfer": {
        "post": {
          "operationId": "BankPaymentsController_transferPayment",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferPaymentDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "payments"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/payments/histories/{userId}": {
        "get": {
          "operationId": "BankPaymentsController_findPaymentHistories",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "paymentStatuses",
              "required": false,
              "in": "query",
              "description": "Supported Payment Status: PENDING,FAILED,SUCCESS,REVERSED",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "paymentReasons",
              "required": false,
              "in": "query",
              "description": "Supported Reason: FUND_WITHDRAWAL,FUND_REFUND,FUND_TRANSFER",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "paymentRequestedCaretakerWithdrawalUserIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "paymentIsForCaretaker",
              "required": false,
              "in": "query",
              "description": "eg: 1 or 0",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "paymentUserIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "paymentAccountHistorySearch",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "PaymentAccounts",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "paymentDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "payments"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/payments/metrics": {
        "get": {
          "operationId": "BankPaymentsController_findReport",
          "parameters": [
            {
              "name": "groupBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "HOUSE",
                  "FLAT",
                  "OWNER",
                  "TENANT",
                  "PROPERTY_MANAGER",
                  "CARETAKER",
                  "USER",
                  "_id",
                  "TYPE",
                  "ENTITY_TYPE",
                  "ENTITY"
                ],
                "type": "string"
              }
            },
            {
              "name": "paymentStatuses",
              "required": false,
              "in": "query",
              "description": "Supported Payment Status: PENDING,FAILED,SUCCESS,REVERSED",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "paymentReasons",
              "required": false,
              "in": "query",
              "description": "Supported Reason: FUND_WITHDRAWAL,FUND_REFUND,FUND_TRANSFER",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "paymentUserIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "paymentAccountHistorySearch",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "PaymentAccounts",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "dayOfWeekWithDateRange",
              "required": false,
              "in": "query",
              "description": "Using dayOfweek with MetricDateRange will plot it between Sunday-Saturday, use 1 for to flag yes or 0/",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "payments"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/payments/accounts": {
        "post": {
          "operationId": "BankPaymentsAdminsController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBankAccountDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "BankPaymentsAdminsController_findPaymentAccounts",
          "parameters": [
            {
              "name": "paymentAccountNo",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "paymentAccountName",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "paymentBankName",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "paymentAccountSearch",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/payments/accounts/{userId}": {
        "patch": {
          "operationId": "BankPaymentsAdminsController_update",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBankAccountDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "BankPaymentsAdminsController_findUserPaymentAccount",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/payments/accounts/{paymentAccountId}/user/{userId}": {
        "delete": {
          "operationId": "BankPaymentsAdminsController_removePaymentAccountById",
          "parameters": [
            {
              "name": "paymentAccountId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/payments/users/{userId}/transfer": {
        "post": {
          "operationId": "BankPaymentsAdminsController_transferPayment",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferPaymentDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/payments/accounts/{paymentAccountId}": {
        "get": {
          "operationId": "BankPaymentsAdminsController_findPaymentAccountById",
          "parameters": [
            {
              "name": "paymentAccountId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/payments/histories": {
        "get": {
          "operationId": "BankPaymentsAdminsController_findPaymentHistories",
          "parameters": [
            {
              "name": "paymentStatuses",
              "required": false,
              "in": "query",
              "description": "Supported Payment Status: PENDING,FAILED,SUCCESS,REVERSED",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "paymentReasons",
              "required": false,
              "in": "query",
              "description": "Supported Reason: FUND_WITHDRAWAL,FUND_REFUND,FUND_TRANSFER",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "paymentRequestedCaretakerWithdrawalUserIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "paymentIsForCaretaker",
              "required": false,
              "in": "query",
              "description": "eg: 1 or 0",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "paymentUserIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "paymentAccountHistorySearch",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "PaymentAccounts",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "paymentDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/payments/metrics": {
        "get": {
          "operationId": "BankPaymentsAdminsController_findReport",
          "parameters": [
            {
              "name": "groupBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "HOUSE",
                  "FLAT",
                  "OWNER",
                  "TENANT",
                  "PROPERTY_MANAGER",
                  "CARETAKER",
                  "USER",
                  "_id",
                  "TYPE",
                  "ENTITY_TYPE",
                  "ENTITY"
                ],
                "type": "string"
              }
            },
            {
              "name": "paymentStatuses",
              "required": false,
              "in": "query",
              "description": "Supported Payment Status: PENDING,FAILED,SUCCESS,REVERSED",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "paymentReasons",
              "required": false,
              "in": "query",
              "description": "Supported Reason: FUND_WITHDRAWAL,FUND_REFUND,FUND_TRANSFER",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "paymentUserIds",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "paymentAccountHistorySearch",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "PaymentAccounts",
              "required": false,
              "in": "query",
              "description": "All separated by comma",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "dayOfWeekWithDateRange",
              "required": false,
              "in": "query",
              "description": "Using dayOfweek with MetricDateRange will plot it between Sunday-Saturday, use 1 for to flag yes or 0/",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/transactions": {
        "get": {
          "operationId": "TransactionsController_findAll",
          "parameters": [
            {
              "name": "transactionByReferenceIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionStatuses",
              "required": false,
              "in": "query",
              "description": "Supported Statuses: PENDING,FAILED,SUCCESS,REVERSED",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionTypes",
              "required": false,
              "in": "query",
              "description": "Supported Types: HOUSE_RENT_PAYMENT,HOUSE_SERVICE_PAYMENT,HOUSE_CONTRIBUTION_PAYMENT,SHORT_LET_RENT_PAYMENT,HOTEL_RENT_PAYMENT,AD_PAYMENT,SUBSCRIPTION_PAYMENT,POST_PROMOTION_PAYMENT,REQUEST_WORKER_PAYMENT,REQUEST_SERVICE_PAYMENT,BOOST_PAYMENT,BLUE_BADGE_PAYMENT,INSPECTION_PAYMENT,FINE_PAYMENT,FUND_COIN_PAYMENT,GIFT_PAYMENT",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionLevels",
              "required": false,
              "in": "query",
              "description": "Supported Levels: PAID_LEVEL,FREE_LEVEL",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByShortLetIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByHouseIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByFlatIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByBeneficiaryIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByOwnerIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByTenantIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionSearchAmount",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "transactions"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/transactions/metrics": {
        "get": {
          "operationId": "TransactionsController_findReport",
          "parameters": [
            {
              "name": "groupBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "HOUSE",
                  "FLAT",
                  "OWNER",
                  "TENANT",
                  "PROPERTY_MANAGER",
                  "CARETAKER",
                  "USER",
                  "_id",
                  "TYPE",
                  "ENTITY_TYPE",
                  "ENTITY"
                ],
                "type": "string"
              }
            },
            {
              "name": "transactionByReferenceIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionStatuses",
              "required": false,
              "in": "query",
              "description": "Supported Statuses: PENDING,FAILED,SUCCESS,REVERSED",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionTypes",
              "required": false,
              "in": "query",
              "description": "Supported Types: HOUSE_RENT_PAYMENT,HOUSE_SERVICE_PAYMENT,HOUSE_CONTRIBUTION_PAYMENT,SHORT_LET_RENT_PAYMENT,HOTEL_RENT_PAYMENT,AD_PAYMENT,SUBSCRIPTION_PAYMENT,POST_PROMOTION_PAYMENT,REQUEST_WORKER_PAYMENT,REQUEST_SERVICE_PAYMENT,BOOST_PAYMENT,BLUE_BADGE_PAYMENT,INSPECTION_PAYMENT,FINE_PAYMENT,FUND_COIN_PAYMENT,GIFT_PAYMENT",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionLevels",
              "required": false,
              "in": "query",
              "description": "Supported Levels: PAID_LEVEL,FREE_LEVEL",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByShortLetIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByHouseIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByFlatIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByBeneficiaryIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByOwnerIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByTenantIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionSearchAmount",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "dayOfWeekWithDateRange",
              "required": false,
              "in": "query",
              "description": "Using dayOfweek with MetricDateRange will plot it between Sunday-Saturday, use 1 for to flag yes or 0/",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "transactions"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/transactions/{transactionId}": {
        "get": {
          "operationId": "TransactionsController_findByTransactionId",
          "parameters": [
            {
              "name": "transactionId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "transactions"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "TransactionsController_remove",
          "parameters": [
            {
              "name": "transactionId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "transactions"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/transactions": {
        "get": {
          "operationId": "TransactionsAdminsController_findAll",
          "parameters": [
            {
              "name": "transactionByReferenceIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionStatuses",
              "required": false,
              "in": "query",
              "description": "Supported Statuses: PENDING,FAILED,SUCCESS,REVERSED",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionTypes",
              "required": false,
              "in": "query",
              "description": "Supported Types: HOUSE_RENT_PAYMENT,HOUSE_SERVICE_PAYMENT,HOUSE_CONTRIBUTION_PAYMENT,SHORT_LET_RENT_PAYMENT,HOTEL_RENT_PAYMENT,AD_PAYMENT,SUBSCRIPTION_PAYMENT,POST_PROMOTION_PAYMENT,REQUEST_WORKER_PAYMENT,REQUEST_SERVICE_PAYMENT,BOOST_PAYMENT,BLUE_BADGE_PAYMENT,INSPECTION_PAYMENT,FINE_PAYMENT,FUND_COIN_PAYMENT,GIFT_PAYMENT",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionLevels",
              "required": false,
              "in": "query",
              "description": "Supported Levels: PAID_LEVEL,FREE_LEVEL",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByShortLetIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByHouseIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByFlatIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByBeneficiaryIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByOwnerIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByTenantIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionSearchAmount",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/transactions/metrics": {
        "get": {
          "operationId": "TransactionsAdminsController_findReport",
          "parameters": [
            {
              "name": "groupBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "HOUSE",
                  "FLAT",
                  "OWNER",
                  "TENANT",
                  "PROPERTY_MANAGER",
                  "CARETAKER",
                  "USER",
                  "_id",
                  "TYPE",
                  "ENTITY_TYPE",
                  "ENTITY"
                ],
                "type": "string"
              }
            },
            {
              "name": "transactionByReferenceIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionStatuses",
              "required": false,
              "in": "query",
              "description": "Supported Statuses: PENDING,FAILED,SUCCESS,REVERSED",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionTypes",
              "required": false,
              "in": "query",
              "description": "Supported Types: HOUSE_RENT_PAYMENT,HOUSE_SERVICE_PAYMENT,HOUSE_CONTRIBUTION_PAYMENT,SHORT_LET_RENT_PAYMENT,HOTEL_RENT_PAYMENT,AD_PAYMENT,SUBSCRIPTION_PAYMENT,POST_PROMOTION_PAYMENT,REQUEST_WORKER_PAYMENT,REQUEST_SERVICE_PAYMENT,BOOST_PAYMENT,BLUE_BADGE_PAYMENT,INSPECTION_PAYMENT,FINE_PAYMENT,FUND_COIN_PAYMENT,GIFT_PAYMENT",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionLevels",
              "required": false,
              "in": "query",
              "description": "Supported Levels: PAID_LEVEL,FREE_LEVEL",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByShortLetIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByHouseIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByFlatIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByBeneficiaryIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByOwnerIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionByTenantIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionSearchAmount",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "transactionDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "dayOfWeekWithDateRange",
              "required": false,
              "in": "query",
              "description": "Using dayOfweek with MetricDateRange will plot it between Sunday-Saturday, use 1 for to flag yes or 0/",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/transactions/{transactionId}": {
        "get": {
          "operationId": "TransactionsAdminsController_findByTransactionId",
          "parameters": [
            {
              "name": "transactionId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "TransactionsAdminsController_remove",
          "parameters": [
            {
              "name": "transactionId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/countries": {
        "get": {
          "operationId": "CommonsController_getCountries",
          "parameters": [],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "countries"
          ]
        }
      },
      "/api/v1/countries/{countryIsoCode}/states": {
        "get": {
          "operationId": "CommonsController_getStates",
          "parameters": [
            {
              "name": "countryIsoCode",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "countries"
          ]
        }
      },
      "/api/v1/countries/{countryIsoCode}/states/{stateIsoCode}/cities": {
        "get": {
          "operationId": "CommonsController_getCities",
          "parameters": [
            {
              "name": "countryIsoCode",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "stateIsoCode",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "countries"
          ]
        }
      },
      "/api/v1/searches/single/address": {
        "post": {
          "operationId": "CommonsController_searchAddress",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAddressDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "searches"
          ]
        }
      },
      "/api/v1/searches/public/{lat}/{long}/address": {
        "get": {
          "operationId": "CommonsController_searchAddressByLatLong",
          "parameters": [
            {
              "name": "lat",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "long",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "searches"
          ]
        }
      },
      "/api/v1/searches/bare/address": {
        "post": {
          "operationId": "CommonsController_lookupAddresses",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAddressDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "searches"
          ]
        }
      },
      "/api/v1/searches/bulk/address": {
        "post": {
          "operationId": "CommonsController_bulkGeolocationLookup",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAddressDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "searches"
          ]
        }
      },
      "/api/v1/amenities": {
        "get": {
          "operationId": "CommonsController_getAmenitiesAndRules",
          "parameters": [],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "amenities"
          ]
        }
      },
      "/api/v1/data-logs/traffic": {
        "get": {
          "operationId": "DataLogsController_trafficMetric",
          "parameters": [],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "data-logs"
          ]
        }
      },
      "/api/v1/admins/data-logs": {
        "get": {
          "operationId": "DataLogsController_findAll",
          "parameters": [
            {
              "name": "dataLogDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "logIpAddresses",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "logStatusCodes",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "logApiMethods",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "logTypes",
              "required": false,
              "in": "query",
              "description": "Separated by comma. SYSTEM,USER,PUBLIC_APP",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "logLevels",
              "required": false,
              "in": "query",
              "description": "Supported LogLevel: LOG,INFO,DEBUG,ERROR",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "logSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "logTraceIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "security": [
            {
              "bearer": []
            }
          ],
          "tags": [
            "admins"
          ]
        }
      },
      "/api/v1/users/{logSource}/logs": {
        "post": {
          "operationId": "DataLogsController_logUser",
          "parameters": [
            {
              "name": "logSource",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "201": {
              "description": ""
            }
          },
          "security": [
            {
              "bearer": []
            }
          ],
          "tags": [
            "users"
          ]
        }
      },
      "/api/v1/admins/{logSource}/logs": {
        "post": {
          "operationId": "DataLogsController_logAdmin",
          "parameters": [
            {
              "name": "logSource",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "201": {
              "description": ""
            }
          },
          "security": [
            {
              "bearer": []
            }
          ],
          "tags": [
            "admins"
          ]
        }
      },
      "/api/v1/admins/data-logs/{dataLogId}": {
        "delete": {
          "operationId": "DataLogsController_remove",
          "parameters": [
            {
              "name": "dataLogId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "security": [
            {
              "bearer": []
            }
          ],
          "tags": [
            "admins"
          ]
        }
      },
      "/api/v1/wait-list": {
        "post": {
          "operationId": "DataLogsController_waitList",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaitListDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "wait-list"
          ]
        }
      },
      "/api/v1/admins/wait-list": {
        "get": {
          "operationId": "DataLogsController_getWaitList",
          "parameters": [],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "security": [
            {
              "bearer": []
            }
          ],
          "tags": [
            "admins"
          ]
        }
      },
      "/api/v1/webhooks/{source}/events": {
        "post": {
          "operationId": "WebhooksController_listenToEvent",
          "parameters": [],
          "responses": {
            "200": {
              "description": ""
            }
          }
        }
      },
      "/api/v1/posts": {
        "post": {
          "operationId": "PostsController_addPost",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePostDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "posts"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "PostsController_findAll",
          "parameters": [
            {
              "name": "isListing",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "postSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "postDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "postPin",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "0",
                  "1"
                ],
                "type": "string"
              }
            },
            {
              "name": "byLocations",
              "required": false,
              "in": "query",
              "description": "e.g: longitude,latitude,KM or -40.943,29.2933,20",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byStates",
              "required": false,
              "in": "query",
              "description": "ALL or state names separated by comma is allow, eg: ALL or Lagos,Abuja",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "postPromotionOwnerIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "postTypes",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "postByUserIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "postIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fakePost",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "0",
                  "1"
                ],
                "type": "string"
              }
            },
            {
              "name": "archivePost",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "0",
                  "1"
                ],
                "type": "string"
              }
            },
            {
              "name": "activePost",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "0",
                  "1"
                ],
                "type": "string"
              }
            },
            {
              "name": "sortByOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "FOLLOW",
                  "LIKE",
                  "SUPER_LIKE",
                  "WATCH",
                  "CUSTOMER",
                  "VIEW",
                  "NEW_COMMENT",
                  "REPLY_COMMENT",
                  "BLOCK",
                  "BOOKMARK"
                ],
                "type": "string"
              }
            },
            {
              "name": "postByOrigin",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "OWNER",
                  "SUBSCRIBER",
                  "PUBLIC"
                ],
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "posts"
          ]
        }
      },
      "/api/v1/posts/{postId}/block": {
        "patch": {
          "operationId": "PostsController_blockPost",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "posts"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/posts/{postId}": {
        "patch": {
          "operationId": "PostsController_updatePost",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePostDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "posts"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "PostsController_remove",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "posts"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "PostsController_findById",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "posts"
          ]
        }
      },
      "/api/v1/posts/{postId}/video/upload": {
        "patch": {
          "operationId": "PostsController_uploadPostVideo",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "posts"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/posts/users/{userId}/likes": {
        "get": {
          "operationId": "PostsController_getUserLikePosts",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "posts"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/posts/users/{userId}/bookmarks": {
        "get": {
          "operationId": "PostsController_getUserPostBookmarks",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "posts"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/posts/{postId}/likes": {
        "get": {
          "operationId": "PostsController_getPostLikes",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "posts"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/posts/{postId}/like": {
        "patch": {
          "operationId": "PostsController_likePost",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "posts"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/posts/{postId}/unlike": {
        "patch": {
          "operationId": "PostsController_unlikePost",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "posts"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/posts/{postId}/bookmark": {
        "patch": {
          "operationId": "PostsController_bookmarkPost",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "posts"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/posts/{postId}/unbookmark": {
        "patch": {
          "operationId": "PostsController_unBookmarkPost",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "posts"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/posts/{postId}/bookmarks": {
        "get": {
          "operationId": "PostsController_getBookmarks",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "posts"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/posts/{postId}/boost": {
        "patch": {
          "operationId": "PostsController_boostPayment",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoostPostDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "posts"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/posts/{postId}/watch": {
        "patch": {
          "operationId": "PostsController_watchPost",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostWatchDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "posts"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/posts/{postId}/gifts/{amount}/earnings": {
        "patch": {
          "operationId": "PostsController_giftPost",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "amount",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "posts"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/posts/{postId}/archive": {
        "patch": {
          "operationId": "PostsController_toggleActive",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "posts"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/posts/{postId}/pin": {
        "patch": {
          "operationId": "PostsController_togglePin",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "posts"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/posts": {
        "post": {
          "operationId": "PostsAdminsController_addPost",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePostDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "PostsAdminsController_findAll",
          "parameters": [
            {
              "name": "postSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "postDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "postPin",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "0",
                  "1"
                ],
                "type": "string"
              }
            },
            {
              "name": "byLocations",
              "required": false,
              "in": "query",
              "description": "e.g: longitude,latitude,KM or -40.943,29.2933,20",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byStates",
              "required": false,
              "in": "query",
              "description": "ALL or state names separated by comma is allow, eg: ALL or Lagos,Abuja",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "postPromotionOwnerIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "postTypes",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "postByUserIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "postIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fakePost",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "0",
                  "1"
                ],
                "type": "string"
              }
            },
            {
              "name": "archivePost",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "0",
                  "1"
                ],
                "type": "string"
              }
            },
            {
              "name": "activePost",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "0",
                  "1"
                ],
                "type": "string"
              }
            },
            {
              "name": "sortByOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "FOLLOW",
                  "LIKE",
                  "SUPER_LIKE",
                  "WATCH",
                  "CUSTOMER",
                  "VIEW",
                  "NEW_COMMENT",
                  "REPLY_COMMENT",
                  "BLOCK",
                  "BOOKMARK"
                ],
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/posts/{postId}": {
        "get": {
          "operationId": "PostsAdminsController_findById",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "patch": {
          "operationId": "PostsAdminsController_updatePost",
          "parameters": [
            {
              "name": "postUploadedFileId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePostDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "PostsAdminsController_remove",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/posts/{postId}/video/upload": {
        "patch": {
          "operationId": "PostsAdminsController_uploadPostVideo",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/posts/{postId}/active": {
        "patch": {
          "operationId": "PostsAdminsController_toggleActive",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/posts/{postId}/archive": {
        "patch": {
          "operationId": "PostsAdminsController_toggleArchive",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/posts/{postId}/pin": {
        "patch": {
          "operationId": "PostsAdminsController_togglePin",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/posts/{postId}/fake": {
        "patch": {
          "operationId": "PostsAdminsController_toggleFake",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/posts/users/{userId}/likes": {
        "get": {
          "operationId": "PostsAdminsController_getPostUserLikes",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/posts/users/{userId}/bookmarks": {
        "get": {
          "operationId": "PostsAdminsController_getPostUserBookmarks",
          "parameters": [
            {
              "name": "userId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/posts/{postId}/likes": {
        "get": {
          "operationId": "PostsAdminsController_getPostLikes",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/posts/{postId}/bookmarks": {
        "get": {
          "operationId": "PostsAdminsController_getPostBookmarks",
          "parameters": [
            {
              "name": "postId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/posts/metrics": {
        "get": {
          "operationId": "PostsAdminsController_findReport",
          "parameters": [
            {
              "name": "postSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "postDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "postPin",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "0",
                  "1"
                ],
                "type": "string"
              }
            },
            {
              "name": "byLocations",
              "required": false,
              "in": "query",
              "description": "e.g: longitude,latitude,KM or -40.943,29.2933,20",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byStates",
              "required": false,
              "in": "query",
              "description": "ALL or state names separated by comma is allow, eg: ALL or Lagos,Abuja",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "postPromotionOwnerIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "postTypes",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "postByUserIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "postIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fakePost",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "0",
                  "1"
                ],
                "type": "string"
              }
            },
            {
              "name": "archivePost",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "0",
                  "1"
                ],
                "type": "string"
              }
            },
            {
              "name": "activePost",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "0",
                  "1"
                ],
                "type": "string"
              }
            },
            {
              "name": "dayOfWeekWithDateRange",
              "required": false,
              "in": "query",
              "description": "Using dayOfweek with MetricDateRange will plot it between Sunday-Saturday, use 1 for to flag yes or 0/",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/ads": {
        "post": {
          "operationId": "AdsController_addAd",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAdDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "ads"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "AdsController_findAll",
          "parameters": [
            {
              "name": "adSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "adByRunningDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "adDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "adStatuses",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "NOT_STARTED",
                  "RUNNING",
                  "ENDED",
                  "CANCELED"
                ],
                "type": "string"
              }
            },
            {
              "name": "adPaid",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "0",
                  "1"
                ],
                "type": "string"
              }
            },
            {
              "name": "adIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "adByUserIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isListing",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "ads"
          ]
        }
      },
      "/api/v1/ads/{adId}/views": {
        "patch": {
          "operationId": "AdsController_addViews",
          "parameters": [
            {
              "name": "adId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "ads"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/ads/{adId}": {
        "patch": {
          "operationId": "AdsController_updateAd",
          "parameters": [
            {
              "name": "adId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAdDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "ads"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "AdsController_remove",
          "parameters": [
            {
              "name": "adId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "ads"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "AdsController_findById",
          "parameters": [
            {
              "name": "adId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "ads"
          ]
        }
      },
      "/api/v1/ads/metrics": {
        "get": {
          "operationId": "AdsController_findReport",
          "parameters": [
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "adSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "adByRunningDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "adDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "adStatuses",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "NOT_STARTED",
                  "RUNNING",
                  "ENDED",
                  "CANCELED"
                ],
                "type": "string"
              }
            },
            {
              "name": "adPaid",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "0",
                  "1"
                ],
                "type": "string"
              }
            },
            {
              "name": "adIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "adByUserIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "ads"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/ads": {
        "post": {
          "operationId": "AdsAdminsController_addAd",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAdDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "AdsAdminsController_findAll",
          "parameters": [
            {
              "name": "adSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "adByRunningDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "adDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "adStatuses",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "NOT_STARTED",
                  "RUNNING",
                  "ENDED",
                  "CANCELED"
                ],
                "type": "string"
              }
            },
            {
              "name": "adPaid",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "0",
                  "1"
                ],
                "type": "string"
              }
            },
            {
              "name": "adIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "adByUserIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "isListing",
              "required": false,
              "in": "query",
              "description": "0 or 1",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/ads/{adId}": {
        "patch": {
          "operationId": "AdsAdminsController_updateAd",
          "parameters": [
            {
              "name": "adId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAdDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "AdsAdminsController_remove",
          "parameters": [
            {
              "name": "adId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "AdsAdminsController_findById",
          "parameters": [
            {
              "name": "adId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/ads/metrics": {
        "get": {
          "operationId": "AdsAdminsController_findReport",
          "parameters": [
            {
              "name": "metricDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15, Don't use if byValue & byValueType is supplied.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "byValueType",
              "required": false,
              "in": "query",
              "description": "You have to supply byValueType when byValue is used",
              "schema": {
                "enum": [
                  "HOUR",
                  "DAY",
                  "DAY_OF_WEEK",
                  "WEEK",
                  "MONTH"
                ],
                "type": "string"
              }
            },
            {
              "name": "byValue",
              "required": false,
              "in": "query",
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "adSearch",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "adByRunningDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "adDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "adStatuses",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "NOT_STARTED",
                  "RUNNING",
                  "ENDED",
                  "CANCELED"
                ],
                "type": "string"
              }
            },
            {
              "name": "adPaid",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "0",
                  "1"
                ],
                "type": "string"
              }
            },
            {
              "name": "adIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "adByUserIds",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "RANDOMLY",
                  "ORDERLY"
                ],
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/comments": {
        "post": {
          "operationId": "CommentsController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCommentDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "comments"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "CommentsController_findAll",
          "parameters": [
            {
              "name": "commentByUserIds",
              "required": false,
              "in": "query",
              "schema": {
  
              }
            },
            {
              "name": "commentByEntityTypes",
              "required": false,
              "in": "query",
              "description": "One or more of USER,HOUSE,FLAT,HOTEL,ROOM,SHORT_LET,POST,AD,SERVICE_REQUEST,COMMENT,REVIEW separated by comma",
              "schema": {
  
              }
            },
            {
              "name": "commentByEntityIds",
              "required": false,
              "in": "query",
              "schema": {
  
              }
            },
            {
              "name": "commentByParentCommentOnly",
              "required": false,
              "in": "query",
              "description": "e.g: 1 or 0",
              "schema": {
  
              }
            },
            {
              "name": "commentByShowComment",
              "required": false,
              "in": "query",
              "description": "e.g: 1 or 0",
              "schema": {
  
              }
            },
            {
              "name": "commentByParentCommentIds",
              "required": false,
              "in": "query",
              "schema": {
  
              }
            },
            {
              "name": "commentDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "comments"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/comments/{commentId}": {
        "patch": {
          "operationId": "CommentsController_update",
          "parameters": [
            {
              "name": "commentId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCommentDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "comments"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "CommentsController_remove",
          "parameters": [
            {
              "name": "commentId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "comments"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "CommentsController_findOne",
          "parameters": [
            {
              "name": "commentId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "comments"
          ]
        }
      },
      "/api/v1/comments/{commentId}/toggle": {
        "put": {
          "operationId": "CommentsController_toggleShowComment",
          "parameters": [
            {
              "name": "commentId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "comments"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/comments/{commentId}/like": {
        "post": {
          "operationId": "CommentsController_likeProduct",
          "parameters": [
            {
              "name": "commentId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "comments"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/comments/{commentId}/unlike": {
        "post": {
          "operationId": "CommentsController_unlikeProduct",
          "parameters": [
            {
              "name": "commentId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "comments"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/comments": {
        "post": {
          "operationId": "CommentsAdminsController_create",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCommentDto"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "CommentsAdminsController_findAll",
          "parameters": [
            {
              "name": "commentByUserIds",
              "required": false,
              "in": "query",
              "schema": {
  
              }
            },
            {
              "name": "commentByEntityTypes",
              "required": false,
              "in": "query",
              "description": "One or more of USER,HOUSE,FLAT,HOTEL,ROOM,SHORT_LET,POST,AD,SERVICE_REQUEST,COMMENT,REVIEW separated by comma",
              "schema": {
  
              }
            },
            {
              "name": "commentByEntityIds",
              "required": false,
              "in": "query",
              "schema": {
  
              }
            },
            {
              "name": "commentByParentCommentOnly",
              "required": false,
              "in": "query",
              "description": "e.g: 1 or 0",
              "schema": {
  
              }
            },
            {
              "name": "commentByShowComment",
              "required": false,
              "in": "query",
              "description": "e.g: 1 or 0",
              "schema": {
  
              }
            },
            {
              "name": "commentByParentCommentIds",
              "required": false,
              "in": "query",
              "schema": {
  
              }
            },
            {
              "name": "commentDateRange",
              "required": false,
              "in": "query",
              "description": "e.g: 2020-11-12,2022-11-15",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/comments/{commentId}": {
        "patch": {
          "operationId": "CommentsAdminsController_update",
          "parameters": [
            {
              "name": "commentId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCommentDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "CommentsAdminsController_remove",
          "parameters": [
            {
              "name": "commentId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "operationId": "CommentsAdminsController_findOne",
          "parameters": [
            {
              "name": "commentId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/comments/{commentId}/toggle": {
        "put": {
          "operationId": "CommentsAdminsController_toggleShowComment",
          "parameters": [
            {
              "name": "commentId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/tags": {
        "get": {
          "operationId": "TagsController_findAll",
          "parameters": [
            {
              "name": "tagBySources",
              "required": false,
              "in": "query",
              "description": "one or more of USER,POST,COMMENT,COMPLIANT,PROPERTY,REVIEW,OTHERS separated by comma",
              "schema": {
  
              }
            },
            {
              "name": "tagByCodes",
              "required": false,
              "in": "query",
              "schema": {
  
              }
            },
            {
              "name": "tagByIds",
              "required": false,
              "in": "query",
              "schema": {
  
              }
            },
            {
              "name": "tagSearch",
              "required": false,
              "in": "query",
              "schema": {
  
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "tags"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/tags/lookup": {
        "get": {
          "operationId": "TagsController_searchByLimit",
          "parameters": [
            {
              "name": "search",
              "required": true,
              "in": "query",
              "schema": {
  
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
  
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "tags"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/tags/{tagId}": {
        "get": {
          "operationId": "TagsController_findOne",
          "parameters": [
            {
              "name": "tagId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "tags"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/tags": {
        "get": {
          "operationId": "TagsAdminsController_findAll",
          "parameters": [
            {
              "name": "tagBySources",
              "required": false,
              "in": "query",
              "description": "one or more of USER,POST,COMMENT,COMPLIANT,PROPERTY,REVIEW,OTHERS separated by comma",
              "schema": {
  
              }
            },
            {
              "name": "tagByCodes",
              "required": false,
              "in": "query",
              "schema": {
  
              }
            },
            {
              "name": "tagByIds",
              "required": false,
              "in": "query",
              "schema": {
  
              }
            },
            {
              "name": "tagSearch",
              "required": false,
              "in": "query",
              "schema": {
  
              }
            },
            {
              "name": "order",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC"
                ],
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/tags/lookup": {
        "get": {
          "operationId": "TagsAdminsController_searchByLimit",
          "parameters": [
            {
              "name": "search",
              "required": true,
              "in": "query",
              "schema": {
  
              }
            },
            {
              "name": "limit",
              "required": false,
              "in": "query",
              "schema": {
  
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/v1/admins/tags/{tagId}": {
        "get": {
          "operationId": "TagsAdminsController_findOne",
          "parameters": [
            {
              "name": "tagId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": ""
            }
          },
          "tags": [
            "admins"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      }
    },
    "info": {
      "title": "Avaye Backend Documentation",
      "description": "All API description and usage",
      "version": "1.0",
      "contact": {
  
      }
    },
    "tags": [
      {
        "name": "wait-list",
        "description": ""
      },
      {
        "name": "users",
        "description": ""
      },
      {
        "name": "service-requests",
        "description": ""
      },
      {
        "name": "comments",
        "description": ""
      },
      {
        "name": "properties",
        "description": ""
      },
      {
        "name": "ads",
        "description": ""
      },
      {
        "name": "posts",
        "description": ""
      },
      {
        "name": "complaints",
        "description": ""
      },
      {
        "name": "reviews",
        "description": ""
      },
      {
        "name": "tags",
        "description": ""
      },
      {
        "name": "amenities",
        "description": ""
      },
      {
        "name": "countries",
        "description": ""
      },
      {
        "name": "searches",
        "description": ""
      },
      {
        "name": "payments",
        "description": ""
      },
      {
        "name": "transactions",
        "description": ""
      },
      {
        "name": "admins",
        "description": ""
      }
    ],
    "servers": [],
    "components": {
      "securitySchemes": {
        "bearer": {
          "scheme": "bearer",
          "bearerFormat": "JWT",
          "type": "http"
        }
      },
      "schemas": {
        "UserLoginDto": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "description": "email or user handle"
            },
            "password": {
              "type": "string"
            },
            "deviceId": {
              "type": "string"
            },
            "deviceToken": {
              "type": "string"
            }
          },
          "required": [
            "username",
            "password"
          ]
        },
        "WorkPortfolio": {
          "type": "object",
          "properties": {
            "company": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "totalMonths": {
              "type": "number"
            },
            "startDate": {
              "type": "string",
              "description": "startDate"
            },
            "endDate": {
              "type": "string",
              "description": "startDate"
            },
            "proofOfExperience": {
              "type": "string",
              "description": "A base64 document"
            }
          },
          "required": [
            "company",
            "title",
            "description",
            "startDate",
            "endDate"
          ]
        },
        "WorkTypes": {
          "type": "string",
          "enum": [
            "ADMINISTRATOR",
            "BARTENDER",
            "BELLHOP",
            "BOOKKEEPER",
            "CATERER",
            "CHEF",
            "CLEANER",
            "CONCIERGE",
            "DRIVER",
            "ELECTRICIAN",
            "EVENT_MANAGER",
            "FACILITY_MANAGER",
            "FRONT_DESK_AGENT",
            "GARDENER",
            "GUEST_SERVICE_AGENT",
            "HOUSEKEEPER",
            "IT_SUPPORT_SPECIALIST",
            "JANITOR",
            "KITCHEN_ASSISTANT",
            "LANDSCAPER",
            "LAUNDRY_ATTENDANT",
            "MAINTENANCE_WORKER",
            "MASSAGE_THERAPIST",
            "NIGHT_AUDITOR",
            "PARKING_ATTENDANT",
            "PLUMBER",
            "POOL_MAINTENANCE_WORKER",
            "PORTER",
            "RECEPTIONIST",
            "REPAIR_TECHNICIAN",
            "ROOM_SERVICE_ATTENDANT",
            "SECURITY_GUARD",
            "SPA_ATTENDANT",
            "VALET",
            "WAITER",
            "YOGA_INSTRUCTOR"
          ]
        },
        "WorkPaymentRate": {
          "type": "object",
          "properties": {
            "oneOff": {
              "type": "number"
            },
            "hourly": {
              "type": "number"
            },
            "weekly": {
              "type": "number"
            },
            "monthly": {
              "type": "number"
            }
          }
        },
        "DocLinkType": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "eg: SMEDAN,UTILITY_BILL,INTERNATIONAL_PASSPORT,DRIVER_LICENSE,NATIONAL_IDENTITY_NUMBER,BIRTH_CERTIFICATE,OTHER, note that OTHER can be a given name of your choice"
            },
            "link": {
              "type": "string",
              "description": "base64 or link document"
            },
            "type": {
              "type": "string",
              "description": "eg: PHOTO,VIDEO,AUDIO,WORD,PDF,EXCEL,ZIP,OTHER default is PHOTO"
            }
          },
          "required": [
            "name",
            "link",
            "type"
          ]
        },
        "SocialMedia": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "link": {
              "type": "string",
              "description": "link to profile"
            }
          },
          "required": [
            "name",
            "link"
          ]
        },
        "RequestVerificationType": {
          "type": "string",
          "enum": [
            "CONTENT_CREATOR",
            "BLUE_BADGE",
            "LEGACY_BADGE",
            "PROPERTY_OWNER_MANAGER",
            "SERVICE_PROVIDER"
          ]
        },
        "UserRequestVerificationDto": {
          "type": "object",
          "properties": {
            "workPortfolios": {
              "description": "List of ",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WorkPortfolio"
              }
            },
            "workTypes": {
              "type": "array",
              "description": "One or more of ADMINISTRATOR,BARTENDER,BELLHOP,BOOKKEEPER,CATERER,CHEF,CLEANER,CONCIERGE,DRIVER,ELECTRICIAN,EVENT_MANAGER,FACILITY_MANAGER,FRONT_DESK_AGENT,GARDENER,GUEST_SERVICE_AGENT,HOUSEKEEPER,IT_SUPPORT_SPECIALIST,JANITOR,KITCHEN_ASSISTANT,LANDSCAPER,LAUNDRY_ATTENDANT,MAINTENANCE_WORKER,MASSAGE_THERAPIST,NIGHT_AUDITOR,PARKING_ATTENDANT,PLUMBER,POOL_MAINTENANCE_WORKER,PORTER,RECEPTIONIST,REPAIR_TECHNICIAN,ROOM_SERVICE_ATTENDANT,SECURITY_GUARD,SPA_ATTENDANT,VALET,WAITER,YOGA_INSTRUCTOR",
              "items": {
                "$ref": "#/components/schemas/WorkTypes"
              }
            },
            "workYearOfExperience": {
              "type": "number"
            },
            "workPaymentRate": {
              "$ref": "#/components/schemas/WorkPaymentRate"
            },
            "meansOfIdentification": {
              "description": "A base64 document",
              "allOf": [
                {
                  "$ref": "#/components/schemas/DocLinkType"
                }
              ]
            },
            "businessDocument": {
              "description": "A base64 document",
              "allOf": [
                {
                  "$ref": "#/components/schemas/DocLinkType"
                }
              ]
            },
            "proofOfAddress": {
              "description": "A base64 document",
              "allOf": [
                {
                  "$ref": "#/components/schemas/DocLinkType"
                }
              ]
            },
            "socialMediaHandles": {
              "description": "List of social platform links",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SocialMedia"
              }
            },
            "verificationPhoto": {
              "type": "string"
            },
            "requestType": {
              "$ref": "#/components/schemas/RequestVerificationType"
            },
            "userId": {
              "type": "string"
            }
          },
          "required": [
            "requestType",
            "userId"
          ]
        },
        "UserPlanSetupDto": {
          "type": "object",
          "properties": {
            "welcomePhotos": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "welcomeVideo": {
              "type": "string"
            },
            "userId": {
              "type": "string"
            },
            "welcomeMessage": {
              "type": "string"
            },
            "monthlyRate": {
              "type": "number"
            }
          },
          "required": [
            "userId",
            "welcomeMessage",
            "monthlyRate"
          ]
        },
        "SubscribeToPlanDto": {
          "type": "object",
          "properties": {
            "subscriberId": {
              "type": "string"
            },
            "plannerId": {
              "type": "string"
            },
            "months": {
              "type": "number"
            }
          },
          "required": [
            "subscriberId",
            "plannerId",
            "months"
          ]
        },
        "PropertyInspectionDto": {
          "type": "object",
          "properties": {
            "isEnable": {
              "type": "number",
              "default": false
            },
            "inspectionFee": {
              "type": "number",
              "default": 0
            }
          },
          "required": [
            "isEnable",
            "inspectionFee"
          ]
        },
        "SubscribePlanDto": {
          "type": "object",
          "properties": {
            "isWalletPayment": {
              "type": "boolean",
              "default": false
            },
            "userId": {
              "type": "string"
            },
            "months": {
              "type": "number"
            },
            "point": {
              "type": "number"
            }
          },
          "required": [
            "isWalletPayment",
            "userId",
            "months"
          ]
        },
        "Categories": {
          "type": "string",
          "enum": [
            "OWNER_MANAGER",
            "GUEST_TENANT",
            "SERVICE_PROVIDER",
            "CREATOR"
          ]
        },
        "UserCreateDto": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "description": "email or user handle"
            },
            "password": {
              "type": "string"
            },
            "deviceId": {
              "type": "string"
            },
            "deviceToken": {
              "type": "string"
            },
            "jobTitle": {
              "type": "string"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "handle": {
              "type": "string"
            },
            "website": {
              "type": "string"
            },
            "languages": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "flatPaymentAccounts": {
              "description": "List of flat payment bank accounts,Only supply if a tenant, format: AccountNumber-BankCode, eg: 0149331772-058",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "categories": {
              "type": "array",
              "description": "One or more of OWNER_MANAGER,GUEST_TENANT,SERVICE_PROVIDER,CREATOR",
              "items": {
                "$ref": "#/components/schemas/Categories"
              }
            },
            "country": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "city": {
              "type": "string"
            }
          },
          "required": [
            "username",
            "password",
            "firstName",
            "lastName",
            "phone",
            "country",
            "state",
            "city"
          ]
        },
        "UserUpdateDto": {
          "type": "object",
          "properties": {
            "workPortfolios": {
              "description": "List of ",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WorkPortfolio"
              }
            },
            "workTypes": {
              "type": "array",
              "description": "One or more of ADMINISTRATOR,BARTENDER,BELLHOP,BOOKKEEPER,CATERER,CHEF,CLEANER,CONCIERGE,DRIVER,ELECTRICIAN,EVENT_MANAGER,FACILITY_MANAGER,FRONT_DESK_AGENT,GARDENER,GUEST_SERVICE_AGENT,HOUSEKEEPER,IT_SUPPORT_SPECIALIST,JANITOR,KITCHEN_ASSISTANT,LANDSCAPER,LAUNDRY_ATTENDANT,MAINTENANCE_WORKER,MASSAGE_THERAPIST,NIGHT_AUDITOR,PARKING_ATTENDANT,PLUMBER,POOL_MAINTENANCE_WORKER,PORTER,RECEPTIONIST,REPAIR_TECHNICIAN,ROOM_SERVICE_ATTENDANT,SECURITY_GUARD,SPA_ATTENDANT,VALET,WAITER,YOGA_INSTRUCTOR",
              "items": {
                "$ref": "#/components/schemas/WorkTypes"
              }
            },
            "workYearOfExperience": {
              "type": "number"
            },
            "workPaymentRate": {
              "$ref": "#/components/schemas/WorkPaymentRate"
            },
            "meansOfIdentification": {
              "description": "A base64 document",
              "allOf": [
                {
                  "$ref": "#/components/schemas/DocLinkType"
                }
              ]
            },
            "businessDocument": {
              "description": "A base64 document",
              "allOf": [
                {
                  "$ref": "#/components/schemas/DocLinkType"
                }
              ]
            },
            "proofOfAddress": {
              "description": "A base64 document",
              "allOf": [
                {
                  "$ref": "#/components/schemas/DocLinkType"
                }
              ]
            },
            "socialMediaHandles": {
              "description": "List of social platform links",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SocialMedia"
              }
            },
            "verificationPhoto": {
              "type": "string"
            },
            "jobTitle": {
              "type": "string"
            },
            "website": {
              "type": "string"
            },
            "languages": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "handle": {
              "type": "string"
            },
            "aboutMe": {
              "type": "string"
            },
            "address": {
              "type": "string"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "photo": {
              "type": "string"
            },
            "age": {
              "type": "number"
            },
            "phone": {
              "type": "string"
            },
            "gender": {
              "type": "string"
            },
            "deviceId": {
              "type": "string"
            },
            "deviceToken": {
              "type": "string"
            },
            "categories": {
              "type": "array",
              "description": "One or more of OWNER_MANAGER,GUEST_TENANT,SERVICE_PROVIDER,CREATOR",
              "items": {
                "$ref": "#/components/schemas/Categories"
              }
            },
            "flatPaymentAccounts": {
              "description": "List of flat payment bank accounts,Only supply if a tenant, format: AccountNumber-BankCode, eg: 0149331772-058",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "country": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "city": {
              "type": "string"
            }
          }
        },
        "UserChangePasswordDto": {
          "type": "object",
          "properties": {
            "oldPassword": {
              "type": "string",
              "description": "Supply oldPassword if a user type but not needed for an admin"
            },
            "newPassword": {
              "type": "string"
            },
            "confirmPassword": {
              "type": "string"
            }
          },
          "required": [
            "newPassword",
            "confirmPassword"
          ]
        },
        "UserForgetPasswordDto": {
          "type": "object",
          "properties": {
            "password": {
              "type": "string"
            },
            "token": {
              "type": "string"
            }
          },
          "required": [
            "password",
            "token"
          ]
        },
        "UserAddPhotoDto": {
          "type": "object",
          "properties": {
            "photo": {
              "type": "string"
            },
            "userId": {
              "type": "string"
            }
          },
          "required": [
            "photo",
            "userId"
          ]
        },
        "AccountVerify": {
          "type": "object",
          "properties": {
            "accountNumber": {
              "type": "string"
            },
            "bankCode": {
              "type": "string"
            }
          },
          "required": [
            "accountNumber",
            "bankCode"
          ]
        },
        "CreateServiceRequestDto": {
          "type": "object",
          "properties": {
            "ownerId": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "photos": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "numberOfWorkers": {
              "type": "number"
            },
            "paymentAmount": {
              "type": "number"
            },
            "paymentType": {
              "type": "string"
            },
            "serviceTypes": {
              "items": {
                "type": "array"
              },
              "type": "array"
            },
            "country": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "address": {
              "type": "string"
            },
            "latitude": {
              "type": "number"
            },
            "longitude": {
              "type": "number"
            }
          },
          "required": [
            "ownerId",
            "title",
            "description",
            "numberOfWorkers",
            "paymentAmount",
            "paymentType",
            "serviceTypes",
            "country",
            "state",
            "city",
            "address",
            "latitude",
            "longitude"
          ]
        },
        "UpdateServiceRequestDto": {
          "type": "object",
          "properties": {
            "ownerId": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "photos": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "numberOfWorkers": {
              "type": "number"
            },
            "paymentAmount": {
              "type": "number"
            },
            "paymentType": {
              "type": "string"
            },
            "serviceTypes": {
              "items": {
                "type": "array"
              },
              "type": "array"
            },
            "country": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "address": {
              "type": "string"
            },
            "latitude": {
              "type": "number"
            },
            "longitude": {
              "type": "number"
            }
          },
          "required": [
            "ownerId",
            "title",
            "description",
            "numberOfWorkers",
            "paymentAmount",
            "paymentType",
            "serviceTypes",
            "country",
            "state",
            "city",
            "address",
            "latitude",
            "longitude"
          ]
        },
        "PaymentModes": {
          "type": "string",
          "enum": [
            "DAILY",
            "WEEKLY",
            "MONHTLY",
            "YEARLY"
          ]
        },
        "CreateFlatDto": {
          "type": "object",
          "properties": {
            "availableAmenities": {
              "type": "object"
            },
            "unavailableAmenities": {
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "totalUnit": {
              "type": "number"
            },
            "totalNumberOfOccurrence": {
              "type": "number"
            },
            "numberOfAdults": {
              "type": "number"
            },
            "numberOfInfants": {
              "type": "number"
            },
            "numberOfChildren": {
              "type": "number"
            },
            "numberOfPets": {
              "type": "number"
            },
            "numberOfToilets": {
              "type": "number"
            },
            "numberOfBathrooms": {
              "type": "number"
            },
            "isSharedSpace": {
              "type": "boolean",
              "default": false
            },
            "isToiletShared": {
              "type": "boolean",
              "default": false
            },
            "isBathroomShared": {
              "type": "boolean",
              "default": false
            },
            "isKitchenShared": {
              "type": "boolean",
              "default": false
            },
            "photos": {
              "description": "Base64 images with data/image or link in each array for photos",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "rentAmount": {
              "type": "number"
            },
            "rentServiceAmount": {
              "type": "number"
            },
            "currentPaymentDate": {
              "type": "string"
            },
            "paymentMode": {
              "$ref": "#/components/schemas/PaymentModes"
            },
            "houseId": {
              "type": "string"
            },
            "ownerId": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "totalUnit",
            "totalNumberOfOccurrence",
            "numberOfAdults",
            "numberOfInfants",
            "numberOfChildren",
            "numberOfPets",
            "numberOfToilets",
            "numberOfBathrooms",
            "rentAmount",
            "rentServiceAmount",
            "paymentMode",
            "houseId",
            "ownerId"
          ]
        },
        "PaymentType": {
          "type": "string",
          "enum": [
            "HOUSE_RENT_PAYMENT",
            "HOUSE_SERVICE_PAYMENT",
            "HOUSE_CONTRIBUTION_PAYMENT"
          ]
        },
        "HousePaymentChargeDto": {
          "type": "object",
          "properties": {
            "isWalletPayment": {
              "type": "boolean",
              "default": false
            },
            "point": {
              "type": "number",
              "default": 0
            },
            "flatId": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "amount": {
              "type": "number"
            },
            "paymentType": {
              "$ref": "#/components/schemas/PaymentType"
            }
          },
          "required": [
            "isWalletPayment",
            "flatId",
            "tenantId",
            "amount",
            "paymentType"
          ]
        },
        "UpdateFlatDto": {
          "type": "object",
          "properties": {
            "availableAmenities": {
              "type": "object"
            },
            "unavailableAmenities": {
              "type": "object"
            },
            "description": {
              "type": "string"
            },
            "totalUnit": {
              "type": "number"
            },
            "numberOfAdults": {
              "type": "number"
            },
            "numberOfInfants": {
              "type": "number"
            },
            "numberOfChildren": {
              "type": "number"
            },
            "numberOfPets": {
              "type": "number"
            },
            "numberOfToilets": {
              "type": "number"
            },
            "isSharedSpace": {
              "type": "boolean",
              "default": false
            },
            "isToiletShared": {
              "type": "boolean",
              "default": false
            },
            "isBathroomShared": {
              "type": "boolean",
              "default": false
            },
            "isKitchenShared": {
              "type": "boolean",
              "default": false
            },
            "numberOfBathrooms": {
              "type": "number"
            },
            "photos": {
              "description": "Base64 images with data/image or link in each array for photos",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "rentAmount": {
              "type": "number"
            },
            "rentServiceAmount": {
              "type": "number"
            },
            "currentPaymentDate": {
              "type": "string"
            },
            "isRentFullPaid": {
              "type": "boolean"
            },
            "isRentServiceFullPaid": {
              "type": "boolean"
            },
            "paymentMode": {
              "$ref": "#/components/schemas/PaymentModes"
            },
            "ownerId": {
              "type": "string"
            }
          },
          "required": [
            "rentAmount",
            "rentServiceAmount",
            "ownerId"
          ]
        },
        "BoostPostDto": {
          "type": "object",
          "properties": {
            "recordId": {
              "type": "string"
            },
            "hours": {
              "type": "number"
            }
          },
          "required": [
            "recordId",
            "hours"
          ]
        },
        "BookPropertyInspectionDto": {
          "type": "object",
          "properties": {
            "recordId": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "startDate": {
              "type": "string",
              "description": "startDate"
            },
            "endDate": {
              "type": "string",
              "description": "startDate"
            }
          },
          "required": [
            "recordId",
            "tenantId",
            "startDate",
            "endDate"
          ]
        },
        "ApartmentType": {
          "type": "string",
          "enum": [
            "ALCOVE",
            "BUNGALOW",
            "COMPLEX",
            "CONDO",
            "DUPLEX",
            "FULLY_DETACHED",
            "GARDEN",
            "HOTEL",
            "LOFT",
            "MAISONETTE",
            "MANSION",
            "PENTHOUSE",
            "RAILROAD",
            "SEMI_DETACHED",
            "STUDIO",
            "TERRACE",
            "THATCHED"
          ]
        },
        "PriceRangeDto": {
          "type": "object",
          "properties": {
            "minPrice": {
              "type": "number",
              "default": 0
            },
            "maxPrice": {
              "type": "number",
              "default": 0
            }
          },
          "required": [
            "minPrice",
            "maxPrice"
          ]
        },
        "ServiceType": {
          "type": "string",
          "enum": [
            "NO_SERVICE",
            "PARTIAL_SERVICED",
            "FULL_SERVICED"
          ]
        },
        "CreateHouseDto": {
          "type": "object",
          "properties": {
            "availableAmenities": {
              "type": "object"
            },
            "unavailableAmenities": {
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "apartmentType": {
              "$ref": "#/components/schemas/ApartmentType"
            },
            "priceRange": {
              "$ref": "#/components/schemas/PriceRangeDto"
            },
            "totalUnit": {
              "type": "number"
            },
            "photos": {
              "description": "Base64 images with data/image or link in each array for photos",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "propertyDocuments": {
              "description": "Base64 images with data/image or link in each array for property documents",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "country": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "costPrice": {
              "type": "number"
            },
            "marketPrice": {
              "type": "number"
            },
            "address": {
              "type": "string"
            },
            "latitude": {
              "type": "number"
            },
            "longitude": {
              "type": "number"
            },
            "serviceType": {
              "$ref": "#/components/schemas/ServiceType"
            },
            "propertyTypes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "petFriendly": {
              "type": "boolean",
              "default": false
            },
            "parkingSize": {
              "type": "number"
            },
            "furnished": {
              "type": "boolean",
              "default": false
            },
            "outdoorSpace": {
              "type": "boolean",
              "default": false
            },
            "hasSecurityFeature": {
              "type": "boolean",
              "default": false
            },
            "nearbyAmenities": {
              "type": "boolean",
              "default": false
            },
            "isSharedSpace": {
              "type": "boolean",
              "default": false
            },
            "isToiletShared": {
              "type": "boolean",
              "default": false
            },
            "isBathroomShared": {
              "type": "boolean",
              "default": false
            },
            "isKitchenShared": {
              "type": "boolean",
              "default": false
            },
            "numberOfAdults": {
              "type": "number"
            },
            "numberOfInfants": {
              "type": "number"
            },
            "numberOfChildren": {
              "type": "number"
            },
            "numberOfPets": {
              "type": "number"
            },
            "numberOfToilets": {
              "type": "number"
            },
            "numberOfBathrooms": {
              "type": "number"
            },
            "communicationEmail": {
              "type": "string",
              "description": "This is for caretaker"
            },
            "communicationPhone": {
              "type": "string",
              "description": "This is for caretaker"
            },
            "ownerId": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "description",
            "apartmentType",
            "totalUnit",
            "country",
            "state",
            "city",
            "costPrice",
            "marketPrice",
            "address",
            "latitude",
            "longitude",
            "serviceType",
            "propertyTypes",
            "ownerId"
          ]
        },
        "PropertyType": {
          "type": "string",
          "enum": [
            "RENT",
            "SALE",
            "SOLD"
          ]
        },
        "UpdateHouseDto": {
          "type": "object",
          "properties": {
            "availableAmenities": {
              "type": "object"
            },
            "unavailableAmenities": {
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "propertyTypes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "apartmentType": {
              "$ref": "#/components/schemas/ApartmentType"
            },
            "priceRange": {
              "$ref": "#/components/schemas/PriceRangeDto"
            },
            "totalUnit": {
              "type": "number"
            },
            "photos": {
              "description": "Base64 images with data/image info or previous or new links for photos",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "propertyDocuments": {
              "description": "Base64 images with data/image or link in each array for property documents",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "country": {
              "type": "string",
              "description": "If provided, always add state & city"
            },
            "state": {
              "type": "string"
            },
            "city": {
              "type": "string",
              "description": "If provided, always add country & state"
            },
            "latitude": {
              "type": "number"
            },
            "longitude": {
              "type": "number"
            },
            "serviceType": {
              "$ref": "#/components/schemas/ServiceType"
            },
            "propertyType": {
              "$ref": "#/components/schemas/PropertyType"
            },
            "petFriendly": {
              "type": "boolean",
              "default": false
            },
            "parkingSize": {
              "type": "number"
            },
            "furnished": {
              "type": "boolean",
              "default": false
            },
            "outdoorSpace": {
              "type": "boolean",
              "default": false
            },
            "hasSecurityFeature": {
              "type": "boolean",
              "default": false
            },
            "nearbyAmenities": {
              "type": "boolean",
              "default": false
            },
            "isSharedSpace": {
              "type": "boolean",
              "default": false
            },
            "isToiletShared": {
              "type": "boolean",
              "default": false
            },
            "isBathroomShared": {
              "type": "boolean",
              "default": false
            },
            "isKitchenShared": {
              "type": "boolean",
              "default": false
            },
            "numberOfAdults": {
              "type": "number"
            },
            "numberOfInfants": {
              "type": "number"
            },
            "numberOfChildren": {
              "type": "number"
            },
            "numberOfPets": {
              "type": "number"
            },
            "numberOfToilets": {
              "type": "number"
            },
            "numberOfBathrooms": {
              "type": "number"
            },
            "costPrice": {
              "type": "number"
            },
            "marketPrice": {
              "type": "number"
            },
            "address": {
              "type": "string"
            },
            "communicationEmail": {
              "type": "string"
            },
            "communicationPhone": {
              "type": "string"
            },
            "ownerId": {
              "type": "string"
            }
          },
          "required": [
            "ownerId"
          ]
        },
        "AddPlatformChargeDto": {
          "type": "object",
          "properties": {
            "platformChargeRentRatio": {
              "type": "number"
            },
            "platformChargeRentServiceRatio": {
              "type": "number"
            },
            "platformContributionChargePercentRatio": {
              "type": "number"
            },
            "ownerId": {
              "type": "string"
            }
          },
          "required": [
            "platformChargeRentRatio",
            "platformChargeRentServiceRatio",
            "platformContributionChargePercentRatio",
            "ownerId"
          ]
        },
        "CreateRoomDto": {
          "type": "object",
          "properties": {
            "availableAmenities": {
              "type": "object"
            },
            "unavailableAmenities": {
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "totalUnit": {
              "type": "number"
            },
            "totalNumberOfOccurrence": {
              "type": "number"
            },
            "numberOfAdults": {
              "type": "number"
            },
            "numberOfInfants": {
              "type": "number"
            },
            "numberOfChildren": {
              "type": "number"
            },
            "numberOfPets": {
              "type": "number"
            },
            "numberOfToilets": {
              "type": "number"
            },
            "numberOfBathrooms": {
              "type": "number"
            },
            "isSharedSpace": {
              "type": "boolean",
              "default": false
            },
            "isToiletShared": {
              "type": "boolean",
              "default": false
            },
            "isBathroomShared": {
              "type": "boolean",
              "default": false
            },
            "isKitchenShared": {
              "type": "boolean",
              "default": false
            },
            "photos": {
              "description": "Base64 images with data/image or link in each array for photos",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "rentAmount": {
              "type": "number"
            },
            "rentServiceAmount": {
              "type": "number"
            },
            "hotelId": {
              "type": "string"
            },
            "ownerId": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "totalUnit",
            "totalNumberOfOccurrence",
            "numberOfAdults",
            "numberOfInfants",
            "numberOfChildren",
            "numberOfPets",
            "numberOfToilets",
            "numberOfBathrooms",
            "rentAmount",
            "rentServiceAmount",
            "hotelId",
            "ownerId"
          ]
        },
        "HotelPaymentChargeDto": {
          "type": "object",
          "properties": {
            "isWalletPayment": {
              "type": "boolean",
              "default": false
            },
            "point": {
              "type": "number",
              "default": 0
            },
            "roomId": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "startDate": {
              "type": "string"
            },
            "endDate": {
              "type": "string"
            }
          },
          "required": [
            "isWalletPayment",
            "roomId",
            "tenantId",
            "startDate",
            "endDate"
          ]
        },
        "UpdateRoomDto": {
          "type": "object",
          "properties": {
            "availableAmenities": {
              "type": "object"
            },
            "unavailableAmenities": {
              "type": "object"
            },
            "totalUnit": {
              "type": "number"
            },
            "description": {
              "type": "string"
            },
            "photos": {
              "description": "Base64 images with data/image or link in each array for photos",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "rentAmount": {
              "type": "number"
            },
            "rentServiceAmount": {
              "type": "number"
            },
            "numberOfAdults": {
              "type": "number"
            },
            "numberOfInfants": {
              "type": "number"
            },
            "numberOfChildren": {
              "type": "number"
            },
            "numberOfPets": {
              "type": "number"
            },
            "numberOfToilets": {
              "type": "number"
            },
            "numberOfBathrooms": {
              "type": "number"
            },
            "isSharedSpace": {
              "type": "boolean",
              "default": false
            },
            "isToiletShared": {
              "type": "boolean",
              "default": false
            },
            "isBathroomShared": {
              "type": "boolean",
              "default": false
            },
            "isKitchenShared": {
              "type": "boolean",
              "default": false
            },
            "ownerId": {
              "type": "string"
            }
          },
          "required": [
            "rentAmount",
            "rentServiceAmount",
            "numberOfToilets",
            "numberOfBathrooms",
            "ownerId"
          ]
        },
        "CreateHotelDto": {
          "type": "object",
          "properties": {
            "availableAmenities": {
              "type": "object"
            },
            "unavailableAmenities": {
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "totalUnit": {
              "type": "number"
            },
            "latitude": {
              "type": "number"
            },
            "longitude": {
              "type": "number"
            },
            "apartmentType": {
              "$ref": "#/components/schemas/ApartmentType"
            },
            "priceRange": {
              "$ref": "#/components/schemas/PriceRangeDto"
            },
            "photos": {
              "description": "Base64 images with data/image or link in each array for photos",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "propertyDocuments": {
              "description": "Base64 images with data/image or link in each array for property documents",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "country": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "address": {
              "type": "string"
            },
            "costPrice": {
              "type": "number"
            },
            "marketPrice": {
              "type": "number"
            },
            "propertyTypes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "petFriendly": {
              "type": "boolean",
              "default": false
            },
            "ParkingSize": {
              "type": "number"
            },
            "furnished": {
              "type": "boolean",
              "default": false
            },
            "outdoorSpace": {
              "type": "boolean",
              "default": false
            },
            "hasSecurityFeature": {
              "type": "boolean",
              "default": false
            },
            "nearbyAmenities": {
              "type": "boolean",
              "default": false
            },
            "isSharedSpace": {
              "type": "boolean",
              "default": false
            },
            "isToiletShared": {
              "type": "boolean",
              "default": false
            },
            "isBathroomShared": {
              "type": "boolean",
              "default": false
            },
            "isKitchenShared": {
              "type": "boolean",
              "default": false
            },
            "numberOfAdults": {
              "type": "number"
            },
            "numberOfInfants": {
              "type": "number"
            },
            "numberOfChildren": {
              "type": "number"
            },
            "numberOfPets": {
              "type": "number"
            },
            "numberOfToilets": {
              "type": "number"
            },
            "numberOfBathrooms": {
              "type": "number"
            },
            "ownerId": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "description",
            "totalUnit",
            "latitude",
            "longitude",
            "apartmentType",
            "country",
            "state",
            "city",
            "address",
            "costPrice",
            "marketPrice",
            "propertyTypes",
            "ownerId"
          ]
        },
        "UpdateHotelDto": {
          "type": "object",
          "properties": {
            "availableAmenities": {
              "type": "object"
            },
            "unavailableAmenities": {
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "propertyTypes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "apartmentType": {
              "$ref": "#/components/schemas/ApartmentType"
            },
            "priceRange": {
              "$ref": "#/components/schemas/PriceRangeDto"
            },
            "latitude": {
              "type": "number"
            },
            "longitude": {
              "type": "number"
            },
            "totalUnit": {
              "type": "number"
            },
            "photos": {
              "description": "Base64 images with data/image info or previous or new links for photos",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "propertyDocuments": {
              "description": "Base64 images with data/image or link in each array for property documents",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "country": {
              "type": "string",
              "description": "If provided, always add state & city"
            },
            "state": {
              "type": "string"
            },
            "city": {
              "type": "string",
              "description": "If provided, always add country & state"
            },
            "serviceType": {
              "$ref": "#/components/schemas/ServiceType"
            },
            "propertyType": {
              "$ref": "#/components/schemas/PropertyType"
            },
            "petFriendly": {
              "type": "boolean",
              "default": false
            },
            "parkingSize": {
              "type": "number"
            },
            "furnished": {
              "type": "boolean",
              "default": false
            },
            "outdoorSpace": {
              "type": "boolean",
              "default": false
            },
            "hasSecurityFeature": {
              "type": "boolean",
              "default": false
            },
            "nearbyAmenities": {
              "type": "boolean",
              "default": false
            },
            "isSharedSpace": {
              "type": "boolean",
              "default": false
            },
            "isToiletShared": {
              "type": "boolean",
              "default": false
            },
            "isBathroomShared": {
              "type": "boolean",
              "default": false
            },
            "isKitchenShared": {
              "type": "boolean",
              "default": false
            },
            "numberOfAdults": {
              "type": "number"
            },
            "numberOfInfants": {
              "type": "number"
            },
            "numberOfChildren": {
              "type": "number"
            },
            "numberOfPets": {
              "type": "number"
            },
            "numberOfToilets": {
              "type": "number"
            },
            "numberOfBathrooms": {
              "type": "number"
            },
            "costPrice": {
              "type": "number"
            },
            "marketPrice": {
              "type": "number"
            },
            "address": {
              "type": "string"
            },
            "ownerId": {
              "type": "string"
            }
          },
          "required": [
            "ownerId"
          ]
        },
        "CreateShortLetDto": {
          "type": "object",
          "properties": {
            "availableAmenities": {
              "type": "object"
            },
            "unavailableAmenities": {
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "apartmentType": {
              "$ref": "#/components/schemas/ApartmentType"
            },
            "priceRange": {
              "$ref": "#/components/schemas/PriceRangeDto"
            },
            "totalUnit": {
              "type": "number"
            },
            "numberOfAdults": {
              "type": "number"
            },
            "numberOfInfants": {
              "type": "number"
            },
            "numberOfChildren": {
              "type": "number"
            },
            "numberOfPets": {
              "type": "number"
            },
            "numberOfToilets": {
              "type": "number"
            },
            "numberOfBathrooms": {
              "type": "number"
            },
            "photos": {
              "description": "Base64 images with data/image or link in each array",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "rentAmount": {
              "type": "number"
            },
            "rentServiceAmount": {
              "type": "number"
            },
            "address": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "latitude": {
              "type": "number"
            },
            "longitude": {
              "type": "number"
            },
            "petFriendly": {
              "type": "boolean",
              "default": false
            },
            "parkingSize": {
              "type": "number"
            },
            "furnished": {
              "type": "boolean",
              "default": false
            },
            "outdoorSpace": {
              "type": "boolean",
              "default": false
            },
            "hasSecurityFeature": {
              "type": "boolean",
              "default": false
            },
            "nearbyAmenities": {
              "type": "boolean",
              "default": false
            },
            "isSharedSpace": {
              "type": "boolean",
              "default": false
            },
            "isToiletShared": {
              "type": "boolean",
              "default": false
            },
            "isBathroomShared": {
              "type": "boolean",
              "default": false
            },
            "isKitchenShared": {
              "type": "boolean",
              "default": false
            },
            "ownerId": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "description",
            "apartmentType",
            "totalUnit",
            "numberOfAdults",
            "numberOfInfants",
            "numberOfChildren",
            "numberOfPets",
            "numberOfToilets",
            "numberOfBathrooms",
            "rentAmount",
            "rentServiceAmount",
            "address",
            "country",
            "state",
            "city",
            "latitude",
            "longitude",
            "ownerId"
          ]
        },
        "ShortLetPaymentChargeDto": {
          "type": "object",
          "properties": {
            "isWalletPayment": {
              "type": "boolean",
              "default": false
            },
            "point": {
              "type": "number",
              "default": 0
            },
            "shortLetId": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "startDate": {
              "type": "string"
            },
            "endDate": {
              "type": "string"
            }
          },
          "required": [
            "isWalletPayment",
            "shortLetId",
            "tenantId",
            "startDate",
            "endDate"
          ]
        },
        "UpdateShortLetDto": {
          "type": "object",
          "properties": {
            "availableAmenities": {
              "type": "object"
            },
            "unavailableAmenities": {
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "apartmentType": {
              "$ref": "#/components/schemas/ApartmentType"
            },
            "priceRange": {
              "$ref": "#/components/schemas/PriceRangeDto"
            },
            "totalUnit": {
              "type": "number"
            },
            "numberOfAdults": {
              "type": "number"
            },
            "numberOfInfants": {
              "type": "number"
            },
            "numberOfChildren": {
              "type": "number"
            },
            "numberOfPets": {
              "type": "number"
            },
            "numberOfToilets": {
              "type": "number"
            },
            "numberOfBathrooms": {
              "type": "number"
            },
            "photos": {
              "description": "Base64 images with data/image or link in each array",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "rentAmount": {
              "type": "number"
            },
            "rentServiceAmount": {
              "type": "number"
            },
            "address": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "latitude": {
              "type": "number"
            },
            "longitude": {
              "type": "number"
            },
            "petFriendly": {
              "type": "boolean",
              "default": false
            },
            "parkingSize": {
              "type": "number"
            },
            "furnished": {
              "type": "boolean",
              "default": false
            },
            "outdoorSpace": {
              "type": "boolean",
              "default": false
            },
            "hasSecurityFeature": {
              "type": "boolean",
              "default": false
            },
            "nearbyAmenities": {
              "type": "boolean",
              "default": false
            },
            "isSharedSpace": {
              "type": "boolean",
              "default": false
            },
            "isToiletShared": {
              "type": "boolean",
              "default": false
            },
            "isBathroomShared": {
              "type": "boolean",
              "default": false
            },
            "isKitchenShared": {
              "type": "boolean",
              "default": false
            },
            "ownerId": {
              "type": "string"
            }
          },
          "required": [
            "ownerId"
          ]
        },
        "CreateComplaintDto": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "comment": {
              "type": "string"
            },
            "photos": {
              "description": "Base 64 images with data/image info in each array",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "complaintFrom": {
              "type": "string",
              "description": "UserId"
            },
            "complaintTo": {
              "type": "string",
              "description": "UserId"
            },
            "complaintToHouse": {
              "type": "string",
              "description": "Optional HouseId, Supply if this meant for a house."
            },
            "complaintToFlat": {
              "type": "string",
              "description": "Optional flatId, Supply if this meant for a flat alongside the houseId."
            },
            "complaintToHotel": {
              "type": "string",
              "description": "Optional HotelId, Supply if this meant for a hotel."
            },
            "complaintToRoom": {
              "type": "string",
              "description": "Optional roomId, Supply if this meant for a room alongside the hotelId."
            },
            "complaintToShortLet": {
              "type": "string",
              "description": "Optional ShortLetId, Supply if this meant for a short-let."
            }
          },
          "required": [
            "title",
            "comment",
            "complaintFrom",
            "complaintTo"
          ]
        },
        "UpdateComplaintDto": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "comment": {
              "type": "string"
            },
            "photos": {
              "description": "Base 64 images with data/image info in each array",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "complaintFrom": {
              "type": "string",
              "description": "UserId"
            },
            "complaintTo": {
              "type": "string",
              "description": "UserId"
            },
            "complaintToHouse": {
              "type": "string",
              "description": "Optional HouseId, Supply if this meant for a house."
            },
            "complaintToFlat": {
              "type": "string",
              "description": "Optional flatId, Supply if this meant for a flat alongside the houseId."
            },
            "complaintToHotel": {
              "type": "string",
              "description": "Optional HotelId, Supply if this meant for a hotel."
            },
            "complaintToRoom": {
              "type": "string",
              "description": "Optional roomId, Supply if this meant for a room alongside the hotelId."
            },
            "complaintToShortLet": {
              "type": "string",
              "description": "Optional ShortLetId, Supply if this meant for a short-let."
            }
          },
          "required": [
            "title",
            "comment",
            "complaintFrom",
            "complaintTo"
          ]
        },
        "CreateReviewDto": {
          "type": "object",
          "properties": {
            "ownerId": {
              "type": "string"
            },
            "houseId": {
              "type": "string",
              "description": "Add houseId Id only if the review is for house"
            },
            "flatId": {
              "type": "string",
              "description": "Add flatId only if the review is for flat"
            },
            "hotelId": {
              "type": "string",
              "description": "Add hotelId Id only if the review is for hotel"
            },
            "roomId": {
              "type": "string",
              "description": "Add roomId only if the review is for room"
            },
            "caretakerId": {
              "type": "string",
              "description": "Add caretakerId only if the review is for caretaker"
            },
            "shortLetId": {
              "type": "string",
              "description": "Add shortLetId Id only if the review is for shortLetId"
            },
            "tenantId": {
              "type": "string"
            },
            "rating": {
              "type": "number"
            },
            "comment": {
              "type": "string"
            }
          },
          "required": [
            "ownerId",
            "tenantId",
            "rating"
          ]
        },
        "UpdateReviewDto": {
          "type": "object",
          "properties": {
            "ownerId": {
              "type": "string"
            },
            "houseId": {
              "type": "string",
              "description": "Add houseId Id only if the review is for house"
            },
            "flatId": {
              "type": "string",
              "description": "Add flatId only if the review is for flat"
            },
            "hotelId": {
              "type": "string",
              "description": "Add hotelId Id only if the review is for hotel"
            },
            "roomId": {
              "type": "string",
              "description": "Add roomId only if the review is for room"
            },
            "caretakerId": {
              "type": "string",
              "description": "Add caretakerId only if the review is for caretaker"
            },
            "shortLetId": {
              "type": "string",
              "description": "Add shortLetId Id only if the review is for shortLetId"
            },
            "tenantId": {
              "type": "string"
            },
            "rating": {
              "type": "number"
            },
            "comment": {
              "type": "string"
            }
          },
          "required": [
            "ownerId",
            "tenantId",
            "rating"
          ]
        },
        "CreateBankAccountDto": {
          "type": "object",
          "properties": {
            "bankName": {
              "type": "string"
            },
            "bankCode": {
              "type": "string"
            },
            "bankAddress": {
              "type": "string"
            },
            "beneficiaryName": {
              "type": "string"
            },
            "beneficiaryAccountNo": {
              "type": "string"
            },
            "swiftCodeOrBic": {
              "type": "string"
            },
            "routingOrSortNo": {
              "type": "string"
            },
            "userId": {
              "type": "string"
            },
            "houseId": {
              "type": "string",
              "description": "Only applicable if you creating a bank account to the house caretaker profile auto assign to your house otherwise do not send and the bank account will be created for your own profile.  All service/other charges are paid into that profile"
            }
          },
          "required": [
            "bankName",
            "bankCode",
            "bankAddress",
            "beneficiaryName",
            "beneficiaryAccountNo",
            "userId"
          ]
        },
        "UpdateBankAccountDto": {
          "type": "object",
          "properties": {
            "bankName": {
              "type": "string"
            },
            "bankCode": {
              "type": "string"
            },
            "bankAddress": {
              "type": "string"
            },
            "beneficiaryName": {
              "type": "string"
            },
            "beneficiaryAccountNo": {
              "type": "string"
            },
            "swiftCodeOrBic": {
              "type": "string"
            },
            "routingOrSortNo": {
              "type": "string"
            },
            "userId": {
              "type": "string"
            },
            "houseId": {
              "type": "string",
              "description": "Only applicable if you creating a bank account to the house caretaker profile auto assign to your house otherwise do not send and the bank account will be created for your own profile.  All service/other charges are paid into that profile"
            }
          },
          "required": [
            "bankName",
            "bankCode",
            "bankAddress",
            "beneficiaryName",
            "beneficiaryAccountNo",
            "userId"
          ]
        },
        "PaymentReasons": {
          "type": "string",
          "enum": [
            "FUND_WITHDRAWAL",
            "FUND_REFUND",
            "FUND_TRANSFER"
          ]
        },
        "TransferPaymentDto": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "string"
            },
            "comment": {
              "type": "string"
            },
            "houseId": {
              "type": "string",
              "description": "If you a property manager trying to withdraw from a house caretaker profile, send the houseId along to withdraw from the bank account already setup for the house caretaker profile possibly belonging to you as the manager. All service/other charges are paid into that profile"
            },
            "amount": {
              "type": "number"
            },
            "reason": {
              "$ref": "#/components/schemas/PaymentReasons"
            }
          },
          "required": [
            "userId",
            "amount"
          ]
        },
        "SearchAddressDto": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "city": {
              "type": "string"
            }
          },
          "required": [
            "address"
          ]
        },
        "WaitListDto": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "category": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "email"
          ]
        },
        "LocationAddressDto": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string"
            },
            "latitude": {
              "type": "number"
            },
            "longitude": {
              "type": "number"
            }
          },
          "required": [
            "address",
            "latitude",
            "longitude"
          ]
        },
        "EntityType": {
          "type": "string",
          "enum": [
            "HOTEL",
            "HOUSE",
            "SHORT_LET"
          ]
        },
        "PromotionInfo": {
          "type": "object",
          "properties": {
            "entityId": {
              "type": "string"
            },
            "entityType": {
              "$ref": "#/components/schemas/EntityType"
            }
          },
          "required": [
            "entityId",
            "entityType"
          ]
        },
        "CreatePostDto": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "string"
            },
            "video": {
              "type": "string"
            },
            "cta": {
              "type": "string"
            },
            "photos": {
              "type": "array",
              "items": {
                "type": "array"
              }
            },
            "userTags": {
              "description": "user handle",
              "type": "array",
              "items": {
                "type": "array"
              }
            },
            "locationTag": {
              "$ref": "#/components/schemas/LocationAddressDto"
            },
            "type": {
              "type": "string"
            },
            "pointAmount": {
              "type": "number"
            },
            "isWalletPayment": {
              "type": "boolean",
              "default": false
            },
            "discountAmount": {
              "type": "number"
            },
            "comment": {
              "type": "string"
            },
            "promotions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PromotionInfo"
              }
            },
            "promotionStartDate": {
              "type": "string"
            },
            "promotionEndDate": {
              "type": "string"
            }
          },
          "required": [
            "userId",
            "isWalletPayment"
          ]
        },
        "UpdatePostDto": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "string"
            },
            "video": {
              "type": "string"
            },
            "cta": {
              "type": "string"
            },
            "photos": {
              "type": "array",
              "items": {
                "type": "array"
              }
            },
            "userTags": {
              "description": "user handle",
              "type": "array",
              "items": {
                "type": "array"
              }
            },
            "locationTag": {
              "$ref": "#/components/schemas/LocationAddressDto"
            },
            "type": {
              "type": "string"
            },
            "pointAmount": {
              "type": "number"
            },
            "isWalletPayment": {
              "type": "boolean",
              "default": false
            },
            "discountAmount": {
              "type": "number"
            },
            "comment": {
              "type": "string"
            },
            "promotions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PromotionInfo"
              }
            },
            "promotionStartDate": {
              "type": "string"
            },
            "promotionEndDate": {
              "type": "string"
            }
          },
          "required": [
            "userId",
            "isWalletPayment"
          ]
        },
        "PostWatchDto": {
          "type": "object",
          "properties": {
            "watchPercentage": {
              "type": "number"
            }
          }
        },
        "CreateAdDto": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "photos": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "discountAmount": {
              "type": "number"
            },
            "pointAmount": {
              "type": "number"
            },
            "isWalletPayment": {
              "type": "boolean",
              "default": false
            },
            "link": {
              "type": "string"
            },
            "cta": {
              "type": "string"
            },
            "startDate": {
              "type": "string"
            },
            "endDate": {
              "type": "string"
            },
            "promotions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PromotionInfo"
              }
            },
            "userId": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "description",
            "photos",
            "isWalletPayment",
            "startDate",
            "endDate",
            "userId"
          ]
        },
        "UpdateAdDto": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "photos": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "discountAmount": {
              "type": "number"
            },
            "pointAmount": {
              "type": "number"
            },
            "isWalletPayment": {
              "type": "boolean",
              "default": false
            },
            "link": {
              "type": "string"
            },
            "cta": {
              "type": "string"
            },
            "startDate": {
              "type": "string"
            },
            "endDate": {
              "type": "string"
            },
            "promotions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PromotionInfo"
              }
            },
            "userId": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "description",
            "photos",
            "isWalletPayment",
            "startDate",
            "endDate",
            "userId"
          ]
        },
        "BehaviorActionRecordType": {
          "type": "string",
          "enum": [
            "USER",
            "HOUSE",
            "FLAT",
            "HOTEL",
            "ROOM",
            "SHORT_LET",
            "POST",
            "AD",
            "SERVICE_REQUEST",
            "COMMENT",
            "REVIEW"
          ]
        },
        "CreateCommentDto": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "string"
            },
            "entityType": {
              "$ref": "#/components/schemas/BehaviorActionRecordType"
            },
            "entityId": {
              "type": "string"
            },
            "photos": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "comment": {
              "type": "string"
            },
            "parentCommentId": {
              "type": "string"
            }
          },
          "required": [
            "userId",
            "entityType",
            "entityId",
            "comment"
          ]
        },
        "UpdateCommentDto": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "string"
            },
            "comment": {
              "type": "string"
            },
            "photos": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "userId",
            "comment"
          ]
        }
      }
    },
    "externalDocs": {
      "description": "Postman Collection",
      "url": "/docs/api-json"
    }
  }